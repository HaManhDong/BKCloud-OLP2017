[{"id":"462ea003.4e871","type":"tab","label":"gateway 1","disabled":false,"info":""},{"id":"901e8ed1.49f46","type":"tab","label":"iot-monitoring-data-input","disabled":true,"info":""},{"id":"c1fe362e.505dc8","type":"tab","label":"Simulate IoT Send data","disabled":true,"info":""},{"id":"2f3a3d48.e93182","type":"mqtt-broker","z":"","broker":"mqtt","port":"1883","clientid":"","usetls":false,"compatmode":true,"keepalive":"60","cleansession":true,"willTopic":"","willQos":"0","willPayload":"","birthTopic":"","birthQos":"0","birthPayload":""},{"id":"c314571.ef5e3a8","type":"MySQLdatabase","z":"","host":"db","port":"3306","db":"iot","tz":""},{"id":"12981dbb.41a592","type":"influxdb-server","z":"","host":"influxdb_gw","port":"8086","database":"iot_data"},{"id":"5aff72b3.5eb574","type":"mqtt-broker","z":"","broker":"mqtt","port":"1883","clientid":"","usetls":false,"compatmode":true,"keepalive":"60","cleansession":true,"willTopic":"","willQos":"0","willPayload":"","birthTopic":"","birthQos":"0","birthPayload":""},{"id":"1a7aa7c6.8c831","type":"influxdb-server","z":"","host":"influxdb","port":"8086","database":"ICSE_IOT_DATA"},{"id":"80b94918.ab654","type":"iot-data-in","z":"462ea003.4e871","name":"iot/authenticate","mqttBroker":"2f3a3d48.e93182","topic":"iot/authenticate","x":100,"y":360,"wires":[["8e8f374f.0b7938"]]},{"id":"b62523d6.75d748","type":"function","z":"462ea003.4e871","name":"process query result","func":"var moment = global.get('moment');\nif (msg.boardQueryResult.length === 0) {\n    // prepare add board query\n    var addBoardQuery = 'INSERT INTO board VALUES(?,?,?,?)';\n    var bindValue = [\n        msg.payload.mac_addr, \n        msg.payload.type,\n        'ONLINE',\n        moment(new Date()).format(\"YYYY-MM-DD HH:mm:ss\")\n    ];\n    var addNewBoardMsg = {\n        payload:msg.payload,\n        query:addBoardQuery,\n        bindQuery:bindValue\n    };\n    return [addNewBoardMsg, null];\n    // add board device    \n} else {\n    // do nothing    \n    return [null, msg];\n}","outputs":"2","noerr":0,"x":360,"y":360,"wires":[["5bf2c66b.149868"],["93f27939.321258"]]},{"id":"e71bfcc3.03f49","type":"mqtt out","z":"462ea003.4e871","name":"","topic":"","qos":"","retain":"","broker":"2f3a3d48.e93182","x":1410,"y":360,"wires":[]},{"id":"683b0f66.fb9ca","type":"mysql-query","z":"462ea003.4e871","mydb":"c314571.ef5e3a8","name":"init tables if not exist","queryString":"CREATE TABLE IF NOT EXISTS board (\n    mac_id varchar(255) NOT NULL,\n    board_type varchar(255) NOT NULL,\n    status varchar(255) NOT NULL,\n    last_update DATETIME NOT NULL,\n    PRIMARY KEY (mac_id)\n); \n\nCREATE TABLE IF NOT EXISTS sensor (\n    id varchar(255) NOT NULL,\n    board_mac_id varchar(255) NOT NULL,\n    sensor_type varchar(255) NOT NULL,\n    status varchar(255) NOT NULL,\n    last_update DATETIME NOT NULL,\n    PRIMARY KEY (id,board_mac_id),\n    FOREIGN KEY (board_mac_id) REFERENCES board(mac_id)\n); \n","outputTo":"queryResult","x":760,"y":80,"wires":[["c52eec9c.bf9838"]]},{"id":"db3be5d2.6879f8","type":"inject","z":"462ea003.4e871","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":true,"x":110,"y":80,"wires":[["933da0e5.febad8"]]},{"id":"c52eec9c.bf9838","type":"debug","z":"462ea003.4e871","name":"","active":true,"console":"false","complete":"true","x":970,"y":80,"wires":[]},{"id":"933da0e5.febad8","type":"mysql-query","z":"462ea003.4e871","mydb":"c314571.ef5e3a8","name":"check table exist","queryString":"SHOW TABLES LIKE 'board';\nSHOW TABLES LIKE 'sensor';\n","outputTo":"queryResult","x":290,"y":80,"wires":[["986db2e8.feb46"]]},{"id":"986db2e8.feb46","type":"function","z":"462ea003.4e871","name":"send init tbl command","func":"var tbl_exist = 0;\nfor (let i=0;i<2;i++){\n    if(msg.queryResult[i].length>=1){\n        tbl_exist+=1;\n    }\n}\nif(tbl_exist<2){\n    return msg;    \n}\n","outputs":1,"noerr":0,"x":520,"y":80,"wires":[["683b0f66.fb9ca"]]},{"id":"b2784585.02b12","type":"mysql-query","z":"462ea003.4e871","mydb":"c314571.ef5e3a8","name":"check board","queryString":"","outputTo":"boardQueryResult","x":310,"y":240,"wires":[["b62523d6.75d748"]]},{"id":"8e8f374f.0b7938","type":"function","z":"462ea003.4e871","name":"check board exist","func":"// authenticate msg format\nlet query ='select * from board where mac_id = ?';\n// console.log(msg.payload.mac_addr);\nlet bindQuery = [ msg.payload.mac_addr,];\nmsg.query = query;\nmsg.bindQuery = bindQuery;\nreturn msg;","outputs":"1","noerr":0,"x":130,"y":240,"wires":[["b2784585.02b12"]]},{"id":"5bf2c66b.149868","type":"mysql-query","z":"462ea003.4e871","mydb":"c314571.ef5e3a8","name":"add board","queryString":"","outputTo":"queryResult","x":500,"y":240,"wires":[["93f27939.321258"]]},{"id":"8ccfb477.a5fab","type":"function","z":"462ea003.4e871","name":"process sensor exist result","func":"var moment = global.get('moment');\nfunction checkSensorExist(checkSensor, currentSensors) {\n    var isExist = false;\n    for (var i = 0; i < currentSensors.length; i++) {\n        if (checkSensor.id == currentSensors[i].id) {\n            isExist = true;\n            break;\n        }\n    }\n    return isExist;\n}\n\nfunction createQueryaddNewSensors(newSensors, deviceMacId) {\n    var addSensorsQuery = '';\n    var bindQuery = [];\n    for (var i = 0; i < newSensors.length; i++) {\n        var newSensor = newSensors[i];\n        addSensorsQuery += 'INSERT INTO sensor VALUES (?, ?, ?,?,?); ';\n        bindQuery.push(\n            newSensor.id,\n            deviceMacId,\n            newSensor.type, \n            'ONLINE',\n            moment(new Date()).format(\"YYYY-MM-DD HH:mm:ss\")\n            );\n    }\n    return {\n        query: addSensorsQuery,\n        bindQuery: bindQuery\n    };\n}\n\nvar currentSensors = msg.sensorsQueryResult;\nvar deviceSensors = msg.payload.sensors;\nvar deviceMacId = msg.payload.mac_addr;\nvar newSensors = [];\nfor (var i = 0; i < deviceSensors.length; i++) {\n    checkDeviceSensor = deviceSensors[i];\n    if (checkSensorExist(checkDeviceSensor, currentSensors) === false) {\n        newSensors.push(checkDeviceSensor);\n    }\n}\n\nif (newSensors.length > 0) {\n    var addNewSensorsQuery = createQueryaddNewSensors(newSensors, deviceMacId);\n    var newMsg = {\n        query:addNewSensorsQuery.query,\n        bindQuery:addNewSensorsQuery.bindQuery,\n        payload: msg.payload\n    };\n    return [newMsg, null];\n} else {\n    return [null, msg];\n}","outputs":"2","noerr":0,"x":900,"y":360,"wires":[["e502af4f.4abd68"],["4b8c4e3e.9d8d5"]]},{"id":"e502af4f.4abd68","type":"mysql-query","z":"462ea003.4e871","mydb":"c314571.ef5e3a8","name":"add sensor","queryString":"","outputTo":"boardTypeQueryResult","x":1010,"y":240,"wires":[["4b8c4e3e.9d8d5"]]},{"id":"64fc2088.eb5608","type":"mysql-query","z":"462ea003.4e871","mydb":"c314571.ef5e3a8","name":"get sensors Info","queryString":"","outputTo":"sensorsQueryResult","x":750,"y":260,"wires":[["8ccfb477.a5fab"]]},{"id":"4b8c4e3e.9d8d5","type":"function","z":"462ea003.4e871","name":"send authenticated message","func":"var deviceMacAddr = msg.payload.mac_addr;\n\nvar authenticatedMsg ={\n    type:'authenticate',\n    content:{\n        'authenticate_result':'true'\n    }\n}\nvar sendAuthenticatedMsg ={\n    topic:'iot/'+deviceMacAddr,\n    payload:authenticatedMsg\n}\nreturn sendAuthenticatedMsg;","outputs":1,"noerr":0,"x":1200,"y":360,"wires":[["e71bfcc3.03f49"]]},{"id":"93f27939.321258","type":"function","z":"462ea003.4e871","name":"get current sensors","func":"// authenticate msg format\nlet query ='select * from sensor where board_mac_id = ?';\nlet bindQuery = [ msg.payload.mac_addr,];\nmsg.query = query;\nmsg.bindQuery = bindQuery;\nreturn msg;","outputs":"1","noerr":0,"x":610,"y":360,"wires":[["64fc2088.eb5608"]]},{"id":"d8c98557.83f128","type":"iot-data-in","z":"462ea003.4e871","name":"iot/data","mqttBroker":"2f3a3d48.e93182","topic":"iot/data","x":70,"y":520,"wires":[["de27c5da.4b0c9"]]},{"id":"de27c5da.4b0c9","type":"function","z":"462ea003.4e871","name":"update board info","func":"var moment = global.get('moment');\n\n// authenticate msg format\nlet query ='UPDATE board SET status=?,last_update =? WHERE mac_id = ?';\nlet bindQuery = [ \n    'ONLINE',\n    moment(msg.payload.timestamp).format(\"YYYY-MM-DD HH:mm:ss\"),\n    msg.payload.mac_addr,\n];\nmsg.query = query;\nmsg.bindQuery = bindQuery;\nreturn msg;","outputs":"1","noerr":0,"x":230,"y":520,"wires":[["8e4468.6e4d4398"]]},{"id":"8e4468.6e4d4398","type":"mysql-query","z":"462ea003.4e871","mydb":"c314571.ef5e3a8","name":"update board data","queryString":"","outputTo":"boardQueryResult","x":350,"y":440,"wires":[["677644e3.6c0b1c"]]},{"id":"327b7e87.dfefc2","type":"function","z":"462ea003.4e871","name":"add time serie data","func":"//\tC: [1, 100]; \t%: [0, 100],\tlux: [1, 65535]\nif(msg.queryResultSensorInfo.length>0){\n    let sensorInfo = msg.queryResultSensorInfo[0];\n    let sensorData = msg.payload;\n    let sensorValue = sensorData.value;\n    let addSensorValueMsg = null;\n    if (\n        (sensorInfo.sensor_type == 'LIGHT' && 1 <= sensorValue && sensorValue <= 65535) ||\n        (sensorInfo.sensor_type == 'TEMPERATURE' && 1 <= sensorValue && sensorValue <= 100) ||\n        (sensorInfo.sensor_type == 'HUMIDITY' && 0 <= sensorValue && sensorValue <= 100)\n    ) {\n        addSensorValueMsg = msg;\n        addSensorValueMsg.serieData = {\n            tags: {\n                'mac_id': sensorData.mac_addr,\n                'sensor_id': sensorData.sensor_id.toString(),\n            },\n            fields: {\n                'value':sensorData.value\n            },\n            time_stamp: sensorData.timestamp*Math.pow(10,6)\n        };\n    }\n    if(addSensorValueMsg!==null){\n        return addSensorValueMsg;\n    }\n}\n","outputs":"1","noerr":0,"x":700,"y":520,"wires":[["ae4d8721.a2e7a"]]},{"id":"9e01b591.c1d4a8","type":"mqtt out","z":"462ea003.4e871","name":"","topic":"","qos":"","retain":"","broker":"2f3a3d48.e93182","x":1590,"y":580,"wires":[]},{"id":"b4c72830.35fca8","type":"function","z":"462ea003.4e871","name":"threshold_config","func":"\nreturn msg;","outputs":1,"noerr":0,"x":1390,"y":560,"wires":[["9e01b591.c1d4a8"]]},{"id":"ae4d8721.a2e7a","type":"influxdb-write-data","z":"462ea003.4e871","name":"add time serie data","influxdbServer":"12981dbb.41a592","dataInput":"serieData","measurement":"sensor_data","outputTo":"writeDataResult","x":840,"y":440,"wires":[["990a7314.0df6f8"]]},{"id":"985d47b4.989658","type":"http response","z":"c1fe362e.505dc8","name":"","statusCode":"","headers":{},"x":1007.9287109375,"y":171.03570556640625,"wires":[]},{"id":"9d4a9c00.508d38","type":"iot-data-in","z":"c1fe362e.505dc8","name":"","mqttBroker":"5aff72b3.5eb574","topic":"iot/sensor","x":157,"y":105,"wires":[["567cef5f.566fc"]]},{"id":"f28cc108.466f48","type":"influxdb-out","z":"c1fe362e.505dc8","name":"data_output_to_influxdb","influxdbServer":"1a7aa7c6.8c831","measurement":"sensor_data","enableSchema":true,"dbTags":["sender_sensor","data_type"],"dbFields":[{"name":"value","type":"FLOAT"}],"x":959.857177734375,"y":96.85712432861328,"wires":[]},{"id":"567cef5f.566fc","type":"function","z":"c1fe362e.505dc8","name":"convert data to influx form","func":"var payload = msg.payload;\nvar time_stamp = payload.time_stamp;\nvar time_precision = payload.time_precision;\nvar payload = msg.payload;\nvar time_stamp = payload.time_stamp;\nvar time_precision = payload.time_precision;\nif (time_precision !== \"millisecond\" && time_precision !== \"second\") {\n    node.error(\"Time precision \" + time_precision + \" is not supported! \" +\n        \"Supported type is second and millisecond\");\n\n} else {\n    if (time_precision == \"second\") {\n        time_stamp = time_stamp * Math.pow(10, 9);\n    } else if (time_precision == \"millisecond\") {\n        time_stamp = time_stamp * Math.pow(10, 6);\n    }\n    var outputMgs = [];\n    var sensorData = msg.payload.data;\n    for (var dataType in sensorData) {\n        msgOutPayload = {\n            tags:{\n                \"sender_sensor\":payload.sender_sensor,\n                \"data_type\":dataType,\n            },\n            fields:{\n                \"value\":parseFloat(sensorData[dataType]),\n            },\n            time_stamp:time_stamp,\n\n        };\n        outputMgs.push({payload:msgOutPayload});\n    }\n    return [outputMgs,];\n}","outputs":1,"noerr":0,"x":561.4285278320312,"y":89.14286041259766,"wires":[["f28cc108.466f48"]]},{"id":"d9d070ba.ce75f","type":"chart-template","z":"c1fe362e.505dc8","name":"","x":544.5355834960938,"y":174.42852783203125,"wires":[["985d47b4.989658"]]},{"id":"142819e6.e691ee","type":"inject","z":"c1fe362e.505dc8","name":"","topic":"","payload":"{\"dataType\":\"light\"}","payloadType":"json","repeat":"","crontab":"","once":false,"x":183.57144165039062,"y":257.8927917480469,"wires":[[]]},{"id":"1a3500ef.683b57","type":"http in","z":"c1fe362e.505dc8","name":"","url":"/realtime-chart/api/get-init-data","method":"get","upload":false,"swaggerDoc":"","x":165,"y":500,"wires":[["f1ea78ac.883568"]]},{"id":"154adb74.2534dd","type":"http in","z":"c1fe362e.505dc8","name":"","url":"/realtime-chart","method":"get","upload":false,"swaggerDoc":"","x":165.02777099609375,"y":171.58331298828125,"wires":[["d9d070ba.ce75f"]]},{"id":"61af9935.84879","type":"http response","z":"c1fe362e.505dc8","name":"","statusCode":"","headers":{},"x":1023.7579956054688,"y":498.7935791015625,"wires":[]},{"id":"9946e5a8.3a736","type":"http in","z":"c1fe362e.505dc8","name":"","url":"/realtime-chart/api/get-lastest-data","method":"get","upload":false,"swaggerDoc":"","x":155,"y":680.2857055664062,"wires":[["e481540a.62a008"]]},{"id":"f1ea78ac.883568","type":"function","z":"c1fe362e.505dc8","name":"set unit - start time - end time","func":"let endTime = Date.now();\nlet startTime = endTime - 60*1000;\nmsg.timeSlice = {\n    startTime:startTime*Math.pow(10,6),\n    endTime:endTime*Math.pow(10,6)\n};\nif(msg.payload.dataType=='light'){\n    msg.payload.dataUnit ='lux';\n}else if(msg.payload.dataType=='humidity'){\n    msg.payload.dataUnit='%';\n}else if(msg.payload.dataType=='temperature'){\n    msg.payload.dataUnit='oC';\n}\nreturn msg;","outputs":1,"noerr":0,"x":232.65472412109375,"y":382.6507568359375,"wires":[["327d77dd.24d2a8"]]},{"id":"2ccc932c.7dd904","type":"influxdb-query","z":"c1fe362e.505dc8","name":"query sensor data","influxdbServer":"1a7aa7c6.8c831","queryString":"select *  from sensor_data  \nwhere\n    data_type='{{msg.payload.dataType}}' and\n    time >={{msg.timeSlice.startTime}} and\n    time <={{msg.timeSlice.endTime}}\n    \norder by time asc","outputTo":"query_sensor_data","x":751.0039672851562,"y":386.1150207519531,"wires":[["ad107ebf.2c0e78"]]},{"id":"ad107ebf.2c0e78","type":"function","z":"c1fe362e.505dc8","name":"format return obj","func":"let sensorInitDataList = [];\nfor (let i = 0; i < msg.query_sensor_list.length; i++) {\n    let sensorName = msg.query_sensor_list[i].value;\n    if (sensorName !== null) {\n        let duplicateColor = true;\n        let sensorInitData = {\n            id: sensorName,\n            timeSerieData: []\n        };\n        for (let i = 0; i < msg.query_sensor_data.length; i++) {\n            let timeSliceData = msg.query_sensor_data[i];\n            if (timeSliceData.sender_sensor == sensorInitData.id) {\n                sensorInitData.timeSerieData.push({\n                    timestamp: timeSliceData.time,\n                    value: timeSliceData.value\n                });\n            }\n        }\n        // sensorInitDataList.push(sensorInitData);\n        if (sensorInitData.timeSerieData.length > 0) {\n            sensorInitDataList.push(sensorInitData);\n        }    \n    }\n}\nmsg.payload.linesInitData = sensorInitDataList;\nreturn msg;","outputs":1,"noerr":0,"x":982.8731079101562,"y":389.642822265625,"wires":[["61af9935.84879"]]},{"id":"327d77dd.24d2a8","type":"influxdb-query","z":"c1fe362e.505dc8","name":"query sensor list","influxdbServer":"1a7aa7c6.8c831","queryString":"show tag values \nfrom sensor_data \nwith key=sender_sensor","outputTo":"query_sensor_list","x":505.1785888671875,"y":388.03570556640625,"wires":[["2ccc932c.7dd904"]]},{"id":"e8a70e50.aecbe8","type":"influxdb-query","z":"c1fe362e.505dc8","name":"query sensor list","influxdbServer":"1a7aa7c6.8c831","queryString":"show tag values \nfrom sensor_data \nwith key=sender_sensor","outputTo":"query_sensor_list","x":522.857177734375,"y":547.1429443359375,"wires":[["a71c03d3.d71ed8"]]},{"id":"a71c03d3.d71ed8","type":"influxdb-query","z":"c1fe362e.505dc8","name":"query sensor data","influxdbServer":"1a7aa7c6.8c831","queryString":"select *  from sensor_data  \nwhere\n    data_type='{{msg.payload.dataType}}' and\n    time >={{msg.timeSlice.startTime}} and\n    time <={{msg.timeSlice.endTime}}\n    \norder by time asc","outputTo":"query_sensor_data","x":748.6825256347656,"y":552.3650817871094,"wires":[["41c889a3.8af3e8"]]},{"id":"e481540a.62a008","type":"function","z":"c1fe362e.505dc8","name":"set unit - start time - end time","func":"let endTime = Date.now();\nlet startTime = endTime - 2*1000;\nmsg.timeSlice = {\n    startTime:startTime*Math.pow(10,6),\n    endTime:endTime*Math.pow(10,6)\n};\nif(msg.payload.dataType=='light'){\n    msg.payload.dataUnit ='lux';\n}else if(msg.payload.dataType=='humidity'){\n    msg.payload.dataUnit='%';\n}else if(msg.payload.dataType=='temperature'){\n    msg.payload.dataUnit='oC';\n}\nreturn msg;","outputs":1,"noerr":0,"x":227.14288330078125,"y":555.7143249511719,"wires":[["e8a70e50.aecbe8"]]},{"id":"2802c344.ed20d4","type":"http response","z":"c1fe362e.505dc8","name":"","statusCode":"","headers":{},"x":1022.857177734375,"y":658.5714111328125,"wires":[]},{"id":"41c889a3.8af3e8","type":"function","z":"c1fe362e.505dc8","name":"format return obj","func":"let lastestDataList = [];\nfor (let i = 0; i < msg.query_sensor_list.length; i++) {\n    let sensorName = msg.query_sensor_list[i].value;\n    if (sensorName !== null) {\n        let duplicateColor = true;\n        let lineData = {\n            id: sensorName,\n            timeSerieData: []\n        };\n        for (let i = 0; i < msg.query_sensor_data.length; i++) {\n            let timeSliceData = msg.query_sensor_data[i];\n            if (timeSliceData.sender_sensor == lineData.id) {\n                lineData.timeSerieData.push({\n                    timestamp: timeSliceData.time,\n                    value: timeSliceData.value\n                });\n            }\n        }\n        // sensorInitDataList.push(sensorInitData);\n        if (lineData.timeSerieData.length > 0) {\n            lastestDataList.push(lineData);\n        }    \n    }\n}\nmsg.payload.lastestDataList = lastestDataList;\nreturn msg;","outputs":1,"noerr":0,"x":984.8294677734375,"y":547.9921875,"wires":[["2802c344.ed20d4"]]},{"id":"79da04e6.97ecec","type":"debug","z":"c1fe362e.505dc8","name":"","active":true,"console":"false","complete":"false","x":1018.75,"y":285,"wires":[]},{"id":"87bf7014.0bbc2","type":"iot-data-in","z":"901e8ed1.49f46","name":"icse/data","mqttBroker":"5aff72b3.5eb574","topic":"icse/data","x":73,"y":381,"wires":[["58147113.2aa09"]]},{"id":"998d1842.6cc2c8","type":"iot-data-in","z":"901e8ed1.49f46","name":"board_new_devices","mqttBroker":"5aff72b3.5eb574","topic":"icse/newDevices","x":109,"y":115,"wires":[["72fbe947.5f8fd8"]]},{"id":"e75cdda.38d56a","type":"influxdb-out","z":"901e8ed1.49f46","name":"save new devices","influxdbServer":"1a7aa7c6.8c831","measurement":"devices_and_sensors","enableSchema":false,"dbTags":[],"dbFields":[],"x":743,"y":119,"wires":[]},{"id":"90d4c417.aa8f58","type":"mqtt out","z":"901e8ed1.49f46","name":"send verify message","topic":"","qos":"","retain":"","broker":"5aff72b3.5eb574","x":779,"y":39,"wires":[]},{"id":"72fbe947.5f8fd8","type":"influxdb-query","z":"901e8ed1.49f46","name":"query device info","influxdbServer":"1a7aa7c6.8c831","queryString":"select * \nfrom devices_and_sensors\nwhere macAddr='{{msg.payload.macAddr}}'","outputTo":"query_result","x":261,"y":32,"wires":[["b6d2d3b7.a0d1a8"]]},{"id":"b6d2d3b7.a0d1a8","type":"function","z":"901e8ed1.49f46","name":"check if device exist","func":"if (msg.query_result.length===0){ // device with this mac address is not exist.\n    let new_msg = msg;\n    return [null,new_msg];\n}else{\n        let new_msg = {\n        payload:{type: \"subcribeNewDevice\", status: \"OK\"},\n        topic:'icse/'+msg.payload.macAddr  + '/action'\n    }  \n    return [new_msg,null];\n}\n","outputs":"2","noerr":0,"x":359,"y":98,"wires":[["90d4c417.aa8f58"],["259dc856.f00398"]],"outputLabels":["device exist path","new device path"]},{"id":"259dc856.f00398","type":"function","z":"901e8ed1.49f46","name":"process new device","func":"var payload = msg.payload;\nvar replyMsg = {\n    payload:JSON.stringify(\n        {type: \"subcribeNewDevice\", status: \"OK\"}),\n    topic:'/icse/'+msg.payload.macAddr  + '/action'\n}\nvar addNewDeviceMsg ={\n    payload:{\n            tags:{\n                \"macAddr\": msg.payload.macAddr,\n                //\"devicesStatus\":\"'ONLINE'\"\n            },\n            fields:{\n                \"type\": payload.type,\n                \"devicesStatus\":\"ONLINE\"\n            },\n            time_stamp: Date.now()*Math.pow(10, 6),\n    }\n}\nreturn [replyMsg,addNewDeviceMsg]","outputs":"2","noerr":0,"x":466,"y":178,"wires":[["90d4c417.aa8f58"],["e75cdda.38d56a"]],"outputLabels":["send reply path","add new device path"]},{"id":"58147113.2aa09","type":"influxdb-query","z":"901e8ed1.49f46","name":"query sensor info","influxdbServer":"1a7aa7c6.8c831","queryString":"select * \nfrom devices_and_sensors\nwhere devices_macAddr='{{msg.payload.macAddr}}'\nand sensorID='{{msg.payload.sensorID}}'","outputTo":"query_result","x":174,"y":281,"wires":[["5b5ef721.4b691"]]},{"id":"5b5ef721.4b691","type":"function","z":"901e8ed1.49f46","name":"check if sensor exist","func":"if (msg.query_result.length>0){// sensor exist.\n            let new_msg = msg;\n    return [new_msg,null];\n}else{\n    let new_msg = msg;\n    new_msg.writeDataInput = {\n        tags:{            \n            'devices_macAddr':msg.payload.macAddr,\n            'sensorID':msg.payload.sensorID.toString(),\n        },\n        fields:{\n            'sensorStatus':'ONLINE'\n        },\n        time_stamp: Date.now()*Math.pow(10, 6),\n    }\n    return [null,new_msg];\n}\n","outputs":"2","noerr":0,"x":282.2499694824219,"y":336.75,"wires":[["f1016981.6bf55"],["d03f9e1b.ebe34"]],"outputLabels":["sensor exist path","sensor not exist path"]},{"id":"babe31df.8e0fe8","type":"function","z":"901e8ed1.49f46","name":"check data value","func":"//\tC: [1, 100]; \t%: [0, 100],\tlux: [1, 65535]\nlet sensorData = msg.payload;\nlet sensorValue = sensorData.value;\nlet addSensorValueMsg = null;\nif (\n    (sensorData.unit == 'lux' && 1 <= sensorValue && sensorValue <= 65535) ||\n    (sensorData.unit == 'C' && 1 <= sensorValue && sensorValue <= 100) ||\n    (sensorData.unit == '%' && 0 <= sensorValue && sensorValue <= 100)\n) {\n    addSensorValueMsg = msg;\n    addSensorValueMsg.payload = {\n        tags: {\n            'macAddr': sensorData.macAddr,\n            'sensorID': sensorData.sensorID.toString(),\n        },\n        fields: {\n            'unit':sensorData.unit,\n            'value':sensorValue\n        },\n        time_stamp: Date.now() * Math.pow(10, 6),\n    };\n}\nif(addSensorValueMsg!==null){\n    return addSensorValueMsg;\n}","outputs":"1","noerr":0,"x":770,"y":320,"wires":[["27e28aee.0426a6"]],"outputLabels":["sensor normal"]},{"id":"d03f9e1b.ebe34","type":"influxdb-write-data","z":"901e8ed1.49f46","name":"add new sensor","influxdbServer":"1a7aa7c6.8c831","dataInput":"writeDataInput","measurement":"devices_and_sensors","outputTo":"writeDataResult","x":318.2856750488281,"y":458.5714416503906,"wires":[["f1016981.6bf55"]]},{"id":"71d8b70.cfb5fc8","type":"mqtt out","z":"901e8ed1.49f46","name":"send action message","topic":"","qos":"","retain":"","broker":"5aff72b3.5eb574","x":944.4287109375,"y":202.96435546875,"wires":[]},{"id":"260819dd.644256","type":"threshold-operator","z":"901e8ed1.49f46","name":"operator","temperatureLimit":40,"humidityLimit":60,"luxLimit":300,"actionTopic":"","x":743.214111328125,"y":247.928466796875,"wires":[["71d8b70.cfb5fc8"]]},{"id":"69dbdbc3.5c7c9c","type":"influxdb-query","z":"901e8ed1.49f46","name":"query sensor info","influxdbServer":"1a7aa7c6.8c831","queryString":"select devices_macAddr,sensorID,last(sensorStatus) as sensorStatus, time\nfrom devices_and_sensors\nwhere devices_macAddr='{{msg.payload.macAddr}}'\nand sensorID='{{msg.payload.sensorID}}'","outputTo":"query_result","x":670.7142944335938,"y":510.28582763671875,"wires":[["38dc7966.48171e"]]},{"id":"38dc7966.48171e","type":"function","z":"901e8ed1.49f46","name":"process_sensor_status","func":"//\tC: [1, 100]; \t%: [0, 100],\tlux: [1, 65535]\nlet sensorData = msg.payload;\nlet sensorValue = sensorData.value;\nlet sensorInfo = msg.query_result[0];\n\nlet setSensorStatusMsg = null;\nif (\n    (sensorData.unit == 'lux' && 1 <= sensorValue && sensorValue <= 65535) ||\n    (sensorData.unit == 'C' && 1 <= sensorValue && sensorValue <= 100) ||\n    (sensorData.unit == '%' && 0 <= sensorValue && sensorValue <= 100)\n) {\n    if(sensorInfo.sensorStatus=='OFFLINE'){\n        setSensorStatusMsg = msg;\n        setSensorStatusMsg.payload = {\n            tags: {\n                'devices_macAddr': sensorInfo.devices_macAddr,\n                'sensorID': sensorInfo.sensorID.toString(),\n            },\n            fields: {\n               'sensorStatus': 'ONLINE',\n            },\n            time_stamp: Date.now() * Math.pow(10, 6),\n        };\n    }\n}else{\n    if(sensorInfo.sensorStatus=='ONLINE'){\n        setSensorStatusMsg = msg;\n        setSensorStatusMsg.payload = {\n            tags: {\n                'devices_macAddr': sensorInfo.devices_macAddr,\n                'sensorID': sensorInfo.sensorID.toString(),\n            },\n            fields: {\n                'sensorStatus': 'OFFLINE',\n            },\n            time_stamp: Date.now() * Math.pow(10, 6),\n        };\n    }\n}\nif(setSensorStatusMsg!==null){\n    return setSensorStatusMsg;\n}","outputs":"1","noerr":0,"x":772.7144165039062,"y":426.7142028808594,"wires":[["794e3170.4dd7c"]],"outputLabels":["sensor status change"]},{"id":"f1016981.6bf55","type":"function","z":"901e8ed1.49f46","name":"split action","func":"// split action: operator, add data value, set sensor status\nvar addValueMsg = JSON.parse(JSON.stringify(msg));\nvar setSensorStatusMsg = JSON.parse(JSON.stringify(msg));\nvar operatorMsg = JSON.parse(JSON.stringify(msg));\noperatorMsg.actionTopic = 'icse/'+msg.payload.macAddr+'/action';\n\nreturn [operatorMsg,addValueMsg,setSensorStatusMsg];","outputs":"3","noerr":0,"x":522.8572387695312,"y":334.2856750488281,"wires":[["260819dd.644256"],["babe31df.8e0fe8"],["69dbdbc3.5c7c9c"]],"outputLabels":["set operator","add value","set sensor status"]},{"id":"27e28aee.0426a6","type":"influxdb-out","z":"901e8ed1.49f46","name":"add data value","influxdbServer":"1a7aa7c6.8c831","measurement":"data","enableSchema":false,"dbTags":[],"dbFields":[],"x":1020.0003662109375,"y":327.142822265625,"wires":[]},{"id":"794e3170.4dd7c","type":"influxdb-out","z":"901e8ed1.49f46","name":"set sensor status","influxdbServer":"1a7aa7c6.8c831","measurement":"devices_and_sensors","enableSchema":false,"dbTags":[],"dbFields":[],"x":948.7144775390625,"y":520.5714111328125,"wires":[]},{"id":"ca4e99e4.cbdc28","type":"iot-data-in","z":"901e8ed1.49f46","name":"icse/deviceStatus","mqttBroker":"5aff72b3.5eb574","topic":"icse/deviceStatus","x":85,"y":655,"wires":[["755249dc.eb1d9"]]},{"id":"2b3f28d1.4751f8","type":"function","z":"901e8ed1.49f46","name":"check if device exist","func":"if (msg.query_result.length>0 && msg.payload.status=='OFFLINE'){// sensor exist.\n    let new_msg = msg;\n    new_msg.writeDataInput = {\n        tags:{\n            \"macAddr\": msg.payload.macAddr,\n            //\"devicesStatus\":\"'ONLINE'\"\n        },\n        fields:{\n            \"type\": msg.query_result[0].type,\n            \"devicesStatus\":\"OFFLINE\"\n        },\n        time_stamp: Date.now()*Math.pow(10, 6),\n    }\n    return new_msg;\n}","outputs":"1","noerr":0,"x":371,"y":536,"wires":[["c1632b8b.a7602"]],"outputLabels":["sensor exist path"]},{"id":"755249dc.eb1d9","type":"influxdb-query","z":"901e8ed1.49f46","name":"query device info","influxdbServer":"1a7aa7c6.8c831","queryString":"select * \nfrom devices_and_sensors\nwhere macAddr='{{msg.payload.macAddr}}'","outputTo":"query_result","x":148.75003051757812,"y":540.25,"wires":[["2b3f28d1.4751f8"]]},{"id":"c1632b8b.a7602","type":"influxdb-write-data","z":"901e8ed1.49f46","name":"set device offline","influxdbServer":"1a7aa7c6.8c831","dataInput":"writeDataInput","measurement":"devices_and_sensors","outputTo":"writeDataResult","x":375,"y":675,"wires":[["5e8f189e.07b438"]]},{"id":"5e8f189e.07b438","type":"influxdb-query","z":"901e8ed1.49f46","name":"query device sensor","influxdbServer":"1a7aa7c6.8c831","queryString":"SHOW TAG VALUES \nFROM \"devices_and_sensors\" \nWITH KEY = \"sensorID\" \nWHERE devices_macAddr='{{msg.payload.macAddr}}'","outputTo":"query_result","x":552,"y":609,"wires":[["6d56c94a.23efb","585446c2.dfd45"]]},{"id":"585446c2.dfd45","type":"function","z":"901e8ed1.49f46","name":"set sensors offline","func":"let setSensorMsgs = [];\nfor(let i=0;i<msg.query_result.length;i++){\n    let sensorInfo = msg.query_result[i];\n    let sensorID = sensorInfo.value;\n    let new_msg = JSON.parse(JSON.stringify(msg));\n    new_msg.payload = {\n        tags:{            \n            'devices_macAddr':msg.payload.macAddr,\n            'sensorID': sensorID.toString(),\n        },\n        fields:{\n            'sensorStatus':'OFFLINE'\n        },\n        time_stamp: Date.now()*Math.pow(10, 6),\n    }\n    setSensorMsgs.push(new_msg);\n}\nreturn [setSensorMsgs,]","outputs":"1","noerr":0,"x":778,"y":602,"wires":[["26ef7041.151bc"]],"outputLabels":["sensor exist path"]},{"id":"26ef7041.151bc","type":"influxdb-out","z":"901e8ed1.49f46","name":"set sensors status","influxdbServer":"1a7aa7c6.8c831","measurement":"devices_and_sensors","enableSchema":false,"dbTags":[],"dbFields":[],"x":800,"y":681,"wires":[]},{"id":"6d56c94a.23efb","type":"debug","z":"901e8ed1.49f46","name":"","active":true,"console":"false","complete":"true","x":735,"y":734,"wires":[]},{"id":"677644e3.6c0b1c","type":"function","z":"462ea003.4e871","name":"get sensor info","func":"// authenticate msg format\nlet query ='select * from sensor WHERE id = ? AND board_mac_id = ?';\nlet bindQuery = [ msg.payload.sensor_id, msg.payload.mac_addr,];\nmsg.query = query;\nmsg.bindQuery = bindQuery;\nreturn msg;","outputs":"1","noerr":0,"x":460,"y":520,"wires":[["3e6a5d.92e99da4"]]},{"id":"3e6a5d.92e99da4","type":"mysql-query","z":"462ea003.4e871","mydb":"c314571.ef5e3a8","name":"get sensor info","queryString":"","outputTo":"queryResultSensorInfo","x":580,"y":440,"wires":[["327b7e87.dfefc2"]]},{"id":"5394fe84.970e18","type":"mysql-query","z":"462ea003.4e871","mydb":"c314571.ef5e3a8","name":"update sensor info","queryString":"","outputTo":"boardQueryResult","x":1090,"y":440,"wires":[[]]},{"id":"990a7314.0df6f8","type":"function","z":"462ea003.4e871","name":"update sensor info","func":"var moment = global.get('moment');\n\n// authenticate msg format\nlet query ='UPDATE sensor SET status=?,last_update =? WHERE id = ? AND board_mac_id = ?';\nlet bindQuery = [ \n    'ONLINE',\n    moment(msg.payload.timestamp).format(\"YYYY-MM-DD HH:mm:ss\"),\n    msg.payload.sensor_id,\n    msg.payload.mac_addr,\n];\nmsg.query = query;\nmsg.bindQuery = bindQuery;\nreturn msg;","outputs":"1","noerr":0,"x":950,"y":520,"wires":[["5394fe84.970e18"]]},{"id":"28e9a32d.a003a4","type":"inject","z":"462ea003.4e871","name":"check status interval","topic":"","payload":"","payloadType":"date","repeat":"20","crontab":"","once":false,"x":150,"y":660,"wires":[["ef7b0c8e.106e"]]},{"id":"d9610085.e0e4f8","type":"function","z":"462ea003.4e871","name":"update board info","func":"function setBoardStatus(status,boardMacId){\n    var updateStatusMsg={\n        query:'UPDATE board SET status=? WHERE mac_id = ?',\n        bindQuery:[status,boardMacId]\n    };\n    node.send(updateStatusMsg);\n}\n\nfunction setSensorStatus(status,sensorId,boardMacId){\n    var updateStatusMsg={\n        query:'UPDATE sensor SET status=? WHERE id = ? AND board_mac_id = ?',\n        bindQuery:[status,sensorId,boardMacId]\n    };\n    node.send(updateStatusMsg);\n}\n\nvar moment = global.get('moment');\nvar currentTime= new Date();\nvar checkTime = new Date(currentTime.getTime() - 30000);\nlet boards = msg.boardsAndSensorsInfo[0];\nlet sensors = msg.boardsAndSensorsInfo[1];\nfor(var i=0;i<boards.length;i++){\n    var boardLastUpdate = new Date(boards[i].last_update);\n    if(boardLastUpdate<checkTime && boards[i].status=='ONLINE'){\n        setBoardStatus('OFFLINE',boards[i].mac_id);\n    }\n}\nfor(var i=0;i<sensors.length;i++){\n    var sensorLastUpdate = new Date(sensors[i].last_update);\n    if(sensorLastUpdate<checkTime && sensors[i].status=='ONLINE'){\n        setSensorStatus('OFFLINE',sensors[i].id,sensors[i].board_mac_id);\n    }\n}","outputs":"1","noerr":0,"x":430,"y":660,"wires":[["d51a1b9.f4067e8"]]},{"id":"d51a1b9.f4067e8","type":"mysql-query","z":"462ea003.4e871","mydb":"c314571.ef5e3a8","name":"update board and sensor info","queryString":"","outputTo":"boardQueryResult","x":690,"y":660,"wires":[[]]},{"id":"ef7b0c8e.106e","type":"mysql-query","z":"462ea003.4e871","mydb":"c314571.ef5e3a8","name":"get boards and sensors info","queryString":"select * from board;\nselect * from sensor;","outputTo":"boardsAndSensorsInfo","x":300,"y":580,"wires":[["d9610085.e0e4f8"]]}]