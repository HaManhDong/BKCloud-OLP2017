[{"id":"f81c2146.a8a8","type":"tab","label":"Flow 1"},{"id":"d99cedd2.63744","type":"tab","label":"gateway 1","disabled":true,"info":""},{"id":"4ffd1aac.0699cc","type":"tab","label":"iot-monitoring-data-input","disabled":true,"info":""},{"id":"9900c25f.3c4bb","type":"tab","label":"Simulate IoT Send data","disabled":true,"info":""},{"id":"c045e5a7.572c08","type":"mqtt-broker","z":"","broker":"icse_mqtt","port":"1883","clientid":"","usetls":false,"compatmode":true,"keepalive":"60","cleansession":true,"willTopic":"","willQos":"0","willPayload":"","birthTopic":"","birthQos":"0","birthPayload":""},{"id":"ab67afc2.a5951","type":"mqtt-broker","z":"","broker":"icse_mqtt","port":"1883","clientid":"","usetls":false,"compatmode":true,"keepalive":"60","cleansession":true,"willTopic":"","willQos":"0","willPayload":"","birthTopic":"","birthQos":"0","birthPayload":""},{"id":"686c798c.8bfb1","type":"MySQLdatabase","z":"","host":"icse_mysql","port":"3306","db":"icse_iot","tz":""},{"id":"9d158d3f.2c3128","type":"influxdb-server","z":"","host":"icse_influx","port":"8086","database":"icse_iot"},{"id":"ec988669.12d2b","type":"mqtt-broker","z":"","broker":"mqtt","port":"1883","clientid":"","usetls":false,"compatmode":true,"keepalive":"60","cleansession":true,"willTopic":"","willQos":"0","willPayload":"","birthTopic":"","birthQos":"0","birthPayload":""},{"id":"b23e5410.c016a8","type":"influxdb-server","z":"","host":"influxdb","port":"8086","database":"ICSE_IOT_DATA"},{"id":"82c865e8.28d868","type":"mqtt in","z":"f81c2146.a8a8","name":"","topic":"icse/newDevice","qos":"2","broker":"c045e5a7.572c08","x":103,"y":282.95001220703125,"wires":[["fecf9c4.888b4e"]]},{"id":"1a6af531.5b582b","type":"function","z":"d99cedd2.63744","name":"process query result","func":"var moment = global.get('moment');\nif (msg.boardQueryResult.length === 0) {\n    // prepare add board query\n    var addBoardQuery = 'INSERT INTO board VALUES(?,?,?,?)';\n    var bindValue = [\n        msg.payload.mac_addr, \n        msg.payload.type,\n        'ONLINE',\n        moment(new Date()).format(\"YYYY-MM-DD HH:mm:ss\")\n    ];\n    var addNewBoardMsg = {\n        payload:msg.payload,\n        query:addBoardQuery,\n        bindQuery:bindValue\n    };\n    return [addNewBoardMsg, null];\n    // add board device    \n} else {\n    // do nothing    \n    return [null, msg];\n}","outputs":"2","noerr":0,"x":360,"y":360,"wires":[["dc849723.da0d78"],["b44f7d4b.36194"]]},{"id":"5ac5eafe.978614","type":"mqtt out","z":"d99cedd2.63744","name":"","topic":"","qos":"","retain":"","broker":"ab67afc2.a5951","x":1410,"y":360,"wires":[]},{"id":"d9857d93.3b022","type":"mysql-query","z":"d99cedd2.63744","mydb":"686c798c.8bfb1","name":"init tables if not exist","queryString":"CREATE TABLE IF NOT EXISTS board (\n    mac_id varchar(255) NOT NULL,\n    board_type varchar(255) NOT NULL,\n    status varchar(255) NOT NULL,\n    last_update DATETIME NOT NULL,\n    PRIMARY KEY (mac_id)\n); \n\nCREATE TABLE IF NOT EXISTS sensor (\n    id varchar(255) NOT NULL,\n    board_mac_id varchar(255) NOT NULL,\n    sensor_type varchar(255) NOT NULL,\n    status varchar(255) NOT NULL,\n    last_update DATETIME NOT NULL,\n    PRIMARY KEY (id,board_mac_id),\n    FOREIGN KEY (board_mac_id) REFERENCES board(mac_id)\n); \n","outputTo":"queryResult","x":760,"y":80,"wires":[["622b901f.ea7898"]]},{"id":"16c22aa.d3866d5","type":"inject","z":"d99cedd2.63744","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":true,"x":110,"y":80,"wires":[["4d5d43a5.eaf67c"]]},{"id":"622b901f.ea7898","type":"debug","z":"d99cedd2.63744","name":"","active":true,"console":"false","complete":"true","x":970,"y":80,"wires":[]},{"id":"4d5d43a5.eaf67c","type":"mysql-query","z":"d99cedd2.63744","mydb":"686c798c.8bfb1","name":"check table exist","queryString":"SHOW TABLES LIKE 'board';\nSHOW TABLES LIKE 'sensor';\n","outputTo":"queryResult","x":290,"y":80,"wires":[["ddc3a804.c2101"]]},{"id":"ddc3a804.c2101","type":"function","z":"d99cedd2.63744","name":"send init tbl command","func":"var tbl_exist = 0;\nfor (let i=0;i<2;i++){\n    if(msg.queryResult[i].length>=1){\n        tbl_exist+=1;\n    }\n}\nif(tbl_exist<2){\n    return msg;    \n}\n","outputs":1,"noerr":0,"x":520,"y":80,"wires":[["d9857d93.3b022"]]},{"id":"2722d868.a42128","type":"mysql-query","z":"d99cedd2.63744","mydb":"686c798c.8bfb1","name":"check board","queryString":"","outputTo":"boardQueryResult","x":310,"y":240,"wires":[["1a6af531.5b582b"]]},{"id":"4dc5a015.58ec3","type":"function","z":"d99cedd2.63744","name":"check board exist","func":"// authenticate msg format\nlet query ='select * from board where mac_id = ?';\n// console.log(msg.payload.mac_addr);\nlet bindQuery = [ msg.payload.mac_addr,];\nmsg.query = query;\nmsg.bindQuery = bindQuery;\nreturn msg;","outputs":"1","noerr":0,"x":130,"y":240,"wires":[["2722d868.a42128"]]},{"id":"dc849723.da0d78","type":"mysql-query","z":"d99cedd2.63744","mydb":"686c798c.8bfb1","name":"add board","queryString":"","outputTo":"queryResult","x":500,"y":240,"wires":[["b44f7d4b.36194"]]},{"id":"7c887834.9a1f6","type":"function","z":"d99cedd2.63744","name":"process sensor exist result","func":"var moment = global.get('moment');\nfunction checkSensorExist(checkSensor, currentSensors) {\n    var isExist = false;\n    for (var i = 0; i < currentSensors.length; i++) {\n        if (checkSensor.id == currentSensors[i].id) {\n            isExist = true;\n            break;\n        }\n    }\n    return isExist;\n}\n\nfunction createQueryaddNewSensors(newSensors, deviceMacId) {\n    var addSensorsQuery = '';\n    var bindQuery = [];\n    for (var i = 0; i < newSensors.length; i++) {\n        var newSensor = newSensors[i];\n        addSensorsQuery += 'INSERT INTO sensor VALUES (?, ?, ?,?,?); ';\n        bindQuery.push(\n            newSensor.id,\n            deviceMacId,\n            newSensor.type, \n            'ONLINE',\n            moment(new Date()).format(\"YYYY-MM-DD HH:mm:ss\")\n            );\n    }\n    return {\n        query: addSensorsQuery,\n        bindQuery: bindQuery\n    };\n}\n\nvar currentSensors = msg.sensorsQueryResult;\nvar deviceSensors = msg.payload.sensors;\nvar deviceMacId = msg.payload.mac_addr;\nvar newSensors = [];\nfor (var i = 0; i < deviceSensors.length; i++) {\n    checkDeviceSensor = deviceSensors[i];\n    if (checkSensorExist(checkDeviceSensor, currentSensors) === false) {\n        newSensors.push(checkDeviceSensor);\n    }\n}\n\nif (newSensors.length > 0) {\n    var addNewSensorsQuery = createQueryaddNewSensors(newSensors, deviceMacId);\n    var newMsg = {\n        query:addNewSensorsQuery.query,\n        bindQuery:addNewSensorsQuery.bindQuery,\n        payload: msg.payload\n    };\n    return [newMsg, null];\n} else {\n    return [null, msg];\n}","outputs":"2","noerr":0,"x":900,"y":360,"wires":[["14180d88.d73a9a"],["d13496ab.aa8788"]]},{"id":"14180d88.d73a9a","type":"mysql-query","z":"d99cedd2.63744","mydb":"686c798c.8bfb1","name":"add sensor","queryString":"","outputTo":"boardTypeQueryResult","x":1010,"y":240,"wires":[["d13496ab.aa8788"]]},{"id":"a212f70c.a28c7","type":"mysql-query","z":"d99cedd2.63744","mydb":"686c798c.8bfb1","name":"get sensors Info","queryString":"","outputTo":"sensorsQueryResult","x":750,"y":260,"wires":[["7c887834.9a1f6"]]},{"id":"d13496ab.aa8788","type":"function","z":"d99cedd2.63744","name":"send authenticated message","func":"var deviceMacAddr = msg.payload.mac_addr;\n\nvar authenticatedMsg ={\n    type:'authenticate',\n    content:{\n        'authenticate_result':'true'\n    }\n}\nvar sendAuthenticatedMsg ={\n    topic:'iot/'+deviceMacAddr,\n    payload:authenticatedMsg\n}\nreturn sendAuthenticatedMsg;","outputs":1,"noerr":0,"x":1200,"y":360,"wires":[["5ac5eafe.978614"]]},{"id":"b44f7d4b.36194","type":"function","z":"d99cedd2.63744","name":"get current sensors","func":"// authenticate msg format\nlet query ='select * from sensor where board_mac_id = ?';\nlet bindQuery = [ msg.payload.mac_addr,];\nmsg.query = query;\nmsg.bindQuery = bindQuery;\nreturn msg;","outputs":"1","noerr":0,"x":610,"y":360,"wires":[["a212f70c.a28c7"]]},{"id":"2612c6fc.391842","type":"function","z":"d99cedd2.63744","name":"update board info","func":"var moment = global.get('moment');\n\n// authenticate msg format\nlet query ='UPDATE board SET status=?,last_update =? WHERE mac_id = ?';\nlet bindQuery = [ \n    'ONLINE',\n    moment(msg.payload.timestamp).format(\"YYYY-MM-DD HH:mm:ss\"),\n    msg.payload.mac_addr,\n];\nmsg.query = query;\nmsg.bindQuery = bindQuery;\nreturn msg;","outputs":"1","noerr":0,"x":230,"y":520,"wires":[["4df66fc5.fb29"]]},{"id":"4df66fc5.fb29","type":"mysql-query","z":"d99cedd2.63744","mydb":"686c798c.8bfb1","name":"update board data","queryString":"","outputTo":"boardQueryResult","x":350,"y":440,"wires":[["514b801f.39778"]]},{"id":"aa3c2af5.4620f8","type":"function","z":"d99cedd2.63744","name":"add time serie data","func":"//\tC: [1, 100]; \t%: [0, 100],\tlux: [1, 65535]\nif(msg.queryResultSensorInfo.length>0){\n    let sensorInfo = msg.queryResultSensorInfo[0];\n    let sensorData = msg.payload;\n    let sensorValue = sensorData.value;\n    let addSensorValueMsg = null;\n    if (\n        (sensorInfo.sensor_type == 'LIGHT' && 1 <= sensorValue && sensorValue <= 65535) ||\n        (sensorInfo.sensor_type == 'TEMPERATURE' && 1 <= sensorValue && sensorValue <= 100) ||\n        (sensorInfo.sensor_type == 'HUMIDITY' && 0 <= sensorValue && sensorValue <= 100)\n    ) {\n        addSensorValueMsg = msg;\n        addSensorValueMsg.serieData = {\n            tags: {\n                'mac_id': sensorData.mac_addr,\n                'sensor_id': sensorData.sensor_id.toString(),\n            },\n            fields: {\n                'value':sensorData.value\n            },\n            time_stamp: sensorData.timestamp*Math.pow(10,6)\n        };\n    }\n    if(addSensorValueMsg!==null){\n        return addSensorValueMsg;\n    }\n}\n","outputs":"1","noerr":0,"x":700,"y":520,"wires":[["993ab654.efffc"]]},{"id":"491f9878.ce9b18","type":"mqtt out","z":"d99cedd2.63744","name":"","topic":"","qos":"","retain":"","broker":"ab67afc2.a5951","x":1590,"y":580,"wires":[]},{"id":"24701dc4.69972a","type":"function","z":"d99cedd2.63744","name":"threshold_config","func":"\nreturn msg;","outputs":1,"noerr":0,"x":1390,"y":560,"wires":[["491f9878.ce9b18"]]},{"id":"993ab654.efffc","type":"influxdb-write-data","z":"d99cedd2.63744","name":"add time serie data","influxdbServer":"9d158d3f.2c3128","dataInput":"serieData","measurement":"sensor_data","outputTo":"writeDataResult","x":840,"y":440,"wires":[["7eec781d.256a58"]]},{"id":"947a2863.46ffb","type":"http response","z":"9900c25f.3c4bb","name":"","statusCode":"","headers":{},"x":1007.9287109375,"y":171.03570556640625,"wires":[]},{"id":"a000dfba.9f4038","type":"influxdb-out","z":"9900c25f.3c4bb","name":"data_output_to_influxdb","influxdbServer":"b23e5410.c016a8","measurement":"sensor_data","enableSchema":true,"dbTags":["sender_sensor","data_type"],"dbFields":[{"name":"value","type":"FLOAT"}],"x":959.857177734375,"y":96.85712432861328,"wires":[]},{"id":"b5c94b.d39b36b8","type":"function","z":"9900c25f.3c4bb","name":"convert data to influx form","func":"var payload = msg.payload;\nvar time_stamp = payload.time_stamp;\nvar time_precision = payload.time_precision;\nvar payload = msg.payload;\nvar time_stamp = payload.time_stamp;\nvar time_precision = payload.time_precision;\nif (time_precision !== \"millisecond\" && time_precision !== \"second\") {\n    node.error(\"Time precision \" + time_precision + \" is not supported! \" +\n        \"Supported type is second and millisecond\");\n\n} else {\n    if (time_precision == \"second\") {\n        time_stamp = time_stamp * Math.pow(10, 9);\n    } else if (time_precision == \"millisecond\") {\n        time_stamp = time_stamp * Math.pow(10, 6);\n    }\n    var outputMgs = [];\n    var sensorData = msg.payload.data;\n    for (var dataType in sensorData) {\n        msgOutPayload = {\n            tags:{\n                \"sender_sensor\":payload.sender_sensor,\n                \"data_type\":dataType,\n            },\n            fields:{\n                \"value\":parseFloat(sensorData[dataType]),\n            },\n            time_stamp:time_stamp,\n\n        };\n        outputMgs.push({payload:msgOutPayload});\n    }\n    return [outputMgs,];\n}","outputs":1,"noerr":0,"x":561.4285278320312,"y":89.14286041259766,"wires":[["a000dfba.9f4038"]]},{"id":"80092ddd.e74358","type":"chart-template","z":"9900c25f.3c4bb","name":"","x":544.5355834960938,"y":174.42852783203125,"wires":[["947a2863.46ffb"]]},{"id":"d85e1830.986a3","type":"inject","z":"9900c25f.3c4bb","name":"","topic":"","payload":"{\"dataType\":\"light\"}","payloadType":"json","repeat":"","crontab":"","once":false,"x":183.57144165039062,"y":257.8927917480469,"wires":[[]]},{"id":"2aedcdae.c0c6d2","type":"http in","z":"9900c25f.3c4bb","name":"","url":"/realtime-chart/api/get-init-data","method":"get","upload":false,"swaggerDoc":"","x":165,"y":500,"wires":[["6c23beb3.9bac68"]]},{"id":"ac73a23b.f04ac","type":"http in","z":"9900c25f.3c4bb","name":"","url":"/realtime-chart","method":"get","upload":false,"swaggerDoc":"","x":165.02777099609375,"y":171.58331298828125,"wires":[["80092ddd.e74358"]]},{"id":"9a5dbadb.6d8e7","type":"http response","z":"9900c25f.3c4bb","name":"","statusCode":"","headers":{},"x":1023.7579956054688,"y":498.7935791015625,"wires":[]},{"id":"93a96b63.ce4338","type":"http in","z":"9900c25f.3c4bb","name":"","url":"/realtime-chart/api/get-lastest-data","method":"get","upload":false,"swaggerDoc":"","x":155,"y":680.2857055664062,"wires":[["4e823e12.6f395"]]},{"id":"6c23beb3.9bac68","type":"function","z":"9900c25f.3c4bb","name":"set unit - start time - end time","func":"let endTime = Date.now();\nlet startTime = endTime - 60*1000;\nmsg.timeSlice = {\n    startTime:startTime*Math.pow(10,6),\n    endTime:endTime*Math.pow(10,6)\n};\nif(msg.payload.dataType=='light'){\n    msg.payload.dataUnit ='lux';\n}else if(msg.payload.dataType=='humidity'){\n    msg.payload.dataUnit='%';\n}else if(msg.payload.dataType=='temperature'){\n    msg.payload.dataUnit='oC';\n}\nreturn msg;","outputs":1,"noerr":0,"x":232.65472412109375,"y":382.6507568359375,"wires":[["68cc6e46.2d1938"]]},{"id":"2b59a4aa.24c32c","type":"influxdb-query","z":"9900c25f.3c4bb","name":"query sensor data","influxdbServer":"b23e5410.c016a8","queryString":"select *  from sensor_data  \nwhere\n    data_type='{{msg.payload.dataType}}' and\n    time >={{msg.timeSlice.startTime}} and\n    time <={{msg.timeSlice.endTime}}\n    \norder by time asc","outputTo":"query_sensor_data","x":751.0039672851562,"y":386.1150207519531,"wires":[["390ee294.b45d5e"]]},{"id":"390ee294.b45d5e","type":"function","z":"9900c25f.3c4bb","name":"format return obj","func":"let sensorInitDataList = [];\nfor (let i = 0; i < msg.query_sensor_list.length; i++) {\n    let sensorName = msg.query_sensor_list[i].value;\n    if (sensorName !== null) {\n        let duplicateColor = true;\n        let sensorInitData = {\n            id: sensorName,\n            timeSerieData: []\n        };\n        for (let i = 0; i < msg.query_sensor_data.length; i++) {\n            let timeSliceData = msg.query_sensor_data[i];\n            if (timeSliceData.sender_sensor == sensorInitData.id) {\n                sensorInitData.timeSerieData.push({\n                    timestamp: timeSliceData.time,\n                    value: timeSliceData.value\n                });\n            }\n        }\n        // sensorInitDataList.push(sensorInitData);\n        if (sensorInitData.timeSerieData.length > 0) {\n            sensorInitDataList.push(sensorInitData);\n        }    \n    }\n}\nmsg.payload.linesInitData = sensorInitDataList;\nreturn msg;","outputs":1,"noerr":0,"x":982.8731079101562,"y":389.642822265625,"wires":[["9a5dbadb.6d8e7"]]},{"id":"68cc6e46.2d1938","type":"influxdb-query","z":"9900c25f.3c4bb","name":"query sensor list","influxdbServer":"b23e5410.c016a8","queryString":"show tag values \nfrom sensor_data \nwith key=sender_sensor","outputTo":"query_sensor_list","x":505.1785888671875,"y":388.03570556640625,"wires":[["2b59a4aa.24c32c"]]},{"id":"f8cc9a15.fbcde8","type":"influxdb-query","z":"9900c25f.3c4bb","name":"query sensor list","influxdbServer":"b23e5410.c016a8","queryString":"show tag values \nfrom sensor_data \nwith key=sender_sensor","outputTo":"query_sensor_list","x":522.857177734375,"y":547.1429443359375,"wires":[["6f0dfb45.99fd7c"]]},{"id":"6f0dfb45.99fd7c","type":"influxdb-query","z":"9900c25f.3c4bb","name":"query sensor data","influxdbServer":"b23e5410.c016a8","queryString":"select *  from sensor_data  \nwhere\n    data_type='{{msg.payload.dataType}}' and\n    time >={{msg.timeSlice.startTime}} and\n    time <={{msg.timeSlice.endTime}}\n    \norder by time asc","outputTo":"query_sensor_data","x":748.6825256347656,"y":552.3650817871094,"wires":[["266edd19.06ebd2"]]},{"id":"4e823e12.6f395","type":"function","z":"9900c25f.3c4bb","name":"set unit - start time - end time","func":"let endTime = Date.now();\nlet startTime = endTime - 2*1000;\nmsg.timeSlice = {\n    startTime:startTime*Math.pow(10,6),\n    endTime:endTime*Math.pow(10,6)\n};\nif(msg.payload.dataType=='light'){\n    msg.payload.dataUnit ='lux';\n}else if(msg.payload.dataType=='humidity'){\n    msg.payload.dataUnit='%';\n}else if(msg.payload.dataType=='temperature'){\n    msg.payload.dataUnit='oC';\n}\nreturn msg;","outputs":1,"noerr":0,"x":227.14288330078125,"y":555.7143249511719,"wires":[["f8cc9a15.fbcde8"]]},{"id":"7fc2f9c1.c400d8","type":"http response","z":"9900c25f.3c4bb","name":"","statusCode":"","headers":{},"x":1022.857177734375,"y":658.5714111328125,"wires":[]},{"id":"266edd19.06ebd2","type":"function","z":"9900c25f.3c4bb","name":"format return obj","func":"let lastestDataList = [];\nfor (let i = 0; i < msg.query_sensor_list.length; i++) {\n    let sensorName = msg.query_sensor_list[i].value;\n    if (sensorName !== null) {\n        let duplicateColor = true;\n        let lineData = {\n            id: sensorName,\n            timeSerieData: []\n        };\n        for (let i = 0; i < msg.query_sensor_data.length; i++) {\n            let timeSliceData = msg.query_sensor_data[i];\n            if (timeSliceData.sender_sensor == lineData.id) {\n                lineData.timeSerieData.push({\n                    timestamp: timeSliceData.time,\n                    value: timeSliceData.value\n                });\n            }\n        }\n        // sensorInitDataList.push(sensorInitData);\n        if (lineData.timeSerieData.length > 0) {\n            lastestDataList.push(lineData);\n        }    \n    }\n}\nmsg.payload.lastestDataList = lastestDataList;\nreturn msg;","outputs":1,"noerr":0,"x":984.8294677734375,"y":547.9921875,"wires":[["7fc2f9c1.c400d8"]]},{"id":"8619d2c7.2dca78","type":"debug","z":"9900c25f.3c4bb","name":"","active":true,"console":"false","complete":"false","x":1018.75,"y":285,"wires":[]},{"id":"e1ae84d3.056828","type":"influxdb-out","z":"4ffd1aac.0699cc","name":"save new devices","influxdbServer":"b23e5410.c016a8","measurement":"devices_and_sensors","enableSchema":false,"dbTags":[],"dbFields":[],"x":743,"y":119,"wires":[]},{"id":"586a44ee.e5b83c","type":"mqtt out","z":"4ffd1aac.0699cc","name":"send verify message","topic":"","qos":"","retain":"","broker":"ec988669.12d2b","x":779,"y":39,"wires":[]},{"id":"3d95cb73.ccc8c4","type":"influxdb-query","z":"4ffd1aac.0699cc","name":"query device info","influxdbServer":"b23e5410.c016a8","queryString":"select * \nfrom devices_and_sensors\nwhere macAddr='{{msg.payload.macAddr}}'","outputTo":"query_result","x":261,"y":32,"wires":[["5b4f09d6.6637f8"]]},{"id":"5b4f09d6.6637f8","type":"function","z":"4ffd1aac.0699cc","name":"check if device exist","func":"if (msg.query_result.length===0){ // device with this mac address is not exist.\n    let new_msg = msg;\n    return [null,new_msg];\n}else{\n        let new_msg = {\n        payload:{type: \"subcribeNewDevice\", status: \"OK\"},\n        topic:'icse/'+msg.payload.macAddr  + '/action'\n    }  \n    return [new_msg,null];\n}\n","outputs":"2","noerr":0,"x":359,"y":98,"wires":[["586a44ee.e5b83c"],["dad5ccf8.23e5b"]],"outputLabels":["device exist path","new device path"]},{"id":"dad5ccf8.23e5b","type":"function","z":"4ffd1aac.0699cc","name":"process new device","func":"var payload = msg.payload;\nvar replyMsg = {\n    payload:JSON.stringify(\n        {type: \"subcribeNewDevice\", status: \"OK\"}),\n    topic:'/icse/'+msg.payload.macAddr  + '/action'\n}\nvar addNewDeviceMsg ={\n    payload:{\n            tags:{\n                \"macAddr\": msg.payload.macAddr,\n                //\"devicesStatus\":\"'ONLINE'\"\n            },\n            fields:{\n                \"type\": payload.type,\n                \"devicesStatus\":\"ONLINE\"\n            },\n            time_stamp: Date.now()*Math.pow(10, 6),\n    }\n}\nreturn [replyMsg,addNewDeviceMsg]","outputs":"2","noerr":0,"x":466,"y":178,"wires":[["586a44ee.e5b83c"],["e1ae84d3.056828"]],"outputLabels":["send reply path","add new device path"]},{"id":"4b360229.4dfdac","type":"influxdb-query","z":"4ffd1aac.0699cc","name":"query sensor info","influxdbServer":"b23e5410.c016a8","queryString":"select * \nfrom devices_and_sensors\nwhere devices_macAddr='{{msg.payload.macAddr}}'\nand sensorID='{{msg.payload.sensorID}}'","outputTo":"query_result","x":174,"y":281,"wires":[["e9833462.e7d8f"]]},{"id":"e9833462.e7d8f","type":"function","z":"4ffd1aac.0699cc","name":"check if sensor exist","func":"if (msg.query_result.length>0){// sensor exist.\n            let new_msg = msg;\n    return [new_msg,null];\n}else{\n    let new_msg = msg;\n    new_msg.writeDataInput = {\n        tags:{            \n            'devices_macAddr':msg.payload.macAddr,\n            'sensorID':msg.payload.sensorID.toString(),\n        },\n        fields:{\n            'sensorStatus':'ONLINE'\n        },\n        time_stamp: Date.now()*Math.pow(10, 6),\n    }\n    return [null,new_msg];\n}\n","outputs":"2","noerr":0,"x":282.2499694824219,"y":336.75,"wires":[["c4291dc9.b249d"],["36cc5355.c85674"]],"outputLabels":["sensor exist path","sensor not exist path"]},{"id":"702ceaa2.fefea4","type":"function","z":"4ffd1aac.0699cc","name":"check data value","func":"//\tC: [1, 100]; \t%: [0, 100],\tlux: [1, 65535]\nlet sensorData = msg.payload;\nlet sensorValue = sensorData.value;\nlet addSensorValueMsg = null;\nif (\n    (sensorData.unit == 'lux' && 1 <= sensorValue && sensorValue <= 65535) ||\n    (sensorData.unit == 'C' && 1 <= sensorValue && sensorValue <= 100) ||\n    (sensorData.unit == '%' && 0 <= sensorValue && sensorValue <= 100)\n) {\n    addSensorValueMsg = msg;\n    addSensorValueMsg.payload = {\n        tags: {\n            'macAddr': sensorData.macAddr,\n            'sensorID': sensorData.sensorID.toString(),\n        },\n        fields: {\n            'unit':sensorData.unit,\n            'value':sensorValue\n        },\n        time_stamp: Date.now() * Math.pow(10, 6),\n    };\n}\nif(addSensorValueMsg!==null){\n    return addSensorValueMsg;\n}","outputs":"1","noerr":0,"x":770,"y":320,"wires":[["445deb16.3c6bcc"]],"outputLabels":["sensor normal"]},{"id":"36cc5355.c85674","type":"influxdb-write-data","z":"4ffd1aac.0699cc","name":"add new sensor","influxdbServer":"b23e5410.c016a8","dataInput":"writeDataInput","measurement":"devices_and_sensors","outputTo":"writeDataResult","x":318.2856750488281,"y":458.5714416503906,"wires":[["c4291dc9.b249d"]]},{"id":"d632cacb.2c6e18","type":"mqtt out","z":"4ffd1aac.0699cc","name":"send action message","topic":"","qos":"","retain":"","broker":"ec988669.12d2b","x":944.4287109375,"y":202.96435546875,"wires":[]},{"id":"9c408080.6b4f8","type":"influxdb-query","z":"4ffd1aac.0699cc","name":"query sensor info","influxdbServer":"b23e5410.c016a8","queryString":"select devices_macAddr,sensorID,last(sensorStatus) as sensorStatus, time\nfrom devices_and_sensors\nwhere devices_macAddr='{{msg.payload.macAddr}}'\nand sensorID='{{msg.payload.sensorID}}'","outputTo":"query_result","x":670.7142944335938,"y":510.28582763671875,"wires":[["20d58243.64367e"]]},{"id":"20d58243.64367e","type":"function","z":"4ffd1aac.0699cc","name":"process_sensor_status","func":"//\tC: [1, 100]; \t%: [0, 100],\tlux: [1, 65535]\nlet sensorData = msg.payload;\nlet sensorValue = sensorData.value;\nlet sensorInfo = msg.query_result[0];\n\nlet setSensorStatusMsg = null;\nif (\n    (sensorData.unit == 'lux' && 1 <= sensorValue && sensorValue <= 65535) ||\n    (sensorData.unit == 'C' && 1 <= sensorValue && sensorValue <= 100) ||\n    (sensorData.unit == '%' && 0 <= sensorValue && sensorValue <= 100)\n) {\n    if(sensorInfo.sensorStatus=='OFFLINE'){\n        setSensorStatusMsg = msg;\n        setSensorStatusMsg.payload = {\n            tags: {\n                'devices_macAddr': sensorInfo.devices_macAddr,\n                'sensorID': sensorInfo.sensorID.toString(),\n            },\n            fields: {\n               'sensorStatus': 'ONLINE',\n            },\n            time_stamp: Date.now() * Math.pow(10, 6),\n        };\n    }\n}else{\n    if(sensorInfo.sensorStatus=='ONLINE'){\n        setSensorStatusMsg = msg;\n        setSensorStatusMsg.payload = {\n            tags: {\n                'devices_macAddr': sensorInfo.devices_macAddr,\n                'sensorID': sensorInfo.sensorID.toString(),\n            },\n            fields: {\n                'sensorStatus': 'OFFLINE',\n            },\n            time_stamp: Date.now() * Math.pow(10, 6),\n        };\n    }\n}\nif(setSensorStatusMsg!==null){\n    return setSensorStatusMsg;\n}","outputs":"1","noerr":0,"x":772.7144165039062,"y":426.7142028808594,"wires":[["633bff41.83e2c8"]],"outputLabels":["sensor status change"]},{"id":"c4291dc9.b249d","type":"function","z":"4ffd1aac.0699cc","name":"split action","func":"// split action: operator, add data value, set sensor status\nvar addValueMsg = JSON.parse(JSON.stringify(msg));\nvar setSensorStatusMsg = JSON.parse(JSON.stringify(msg));\nvar operatorMsg = JSON.parse(JSON.stringify(msg));\noperatorMsg.actionTopic = 'icse/'+msg.payload.macAddr+'/action';\n\nreturn [operatorMsg,addValueMsg,setSensorStatusMsg];","outputs":"3","noerr":0,"x":522.8572387695312,"y":334.2856750488281,"wires":[[],["702ceaa2.fefea4"],["9c408080.6b4f8"]],"outputLabels":["set operator","add value","set sensor status"]},{"id":"445deb16.3c6bcc","type":"influxdb-out","z":"4ffd1aac.0699cc","name":"add data value","influxdbServer":"b23e5410.c016a8","measurement":"data","enableSchema":false,"dbTags":[],"dbFields":[],"x":1020.0003662109375,"y":327.142822265625,"wires":[]},{"id":"633bff41.83e2c8","type":"influxdb-out","z":"4ffd1aac.0699cc","name":"set sensor status","influxdbServer":"b23e5410.c016a8","measurement":"devices_and_sensors","enableSchema":false,"dbTags":[],"dbFields":[],"x":948.7144775390625,"y":520.5714111328125,"wires":[]},{"id":"68ae534a.a8e3d4","type":"function","z":"4ffd1aac.0699cc","name":"check if device exist","func":"if (msg.query_result.length>0 && msg.payload.status=='OFFLINE'){// sensor exist.\n    let new_msg = msg;\n    new_msg.writeDataInput = {\n        tags:{\n            \"macAddr\": msg.payload.macAddr,\n            //\"devicesStatus\":\"'ONLINE'\"\n        },\n        fields:{\n            \"type\": msg.query_result[0].type,\n            \"devicesStatus\":\"OFFLINE\"\n        },\n        time_stamp: Date.now()*Math.pow(10, 6),\n    }\n    return new_msg;\n}","outputs":"1","noerr":0,"x":371,"y":536,"wires":[["a94e3e8d.20562"]],"outputLabels":["sensor exist path"]},{"id":"ec40dd9c.5553e","type":"influxdb-query","z":"4ffd1aac.0699cc","name":"query device info","influxdbServer":"b23e5410.c016a8","queryString":"select * \nfrom devices_and_sensors\nwhere macAddr='{{msg.payload.macAddr}}'","outputTo":"query_result","x":148.75003051757812,"y":540.25,"wires":[["68ae534a.a8e3d4"]]},{"id":"a94e3e8d.20562","type":"influxdb-write-data","z":"4ffd1aac.0699cc","name":"set device offline","influxdbServer":"b23e5410.c016a8","dataInput":"writeDataInput","measurement":"devices_and_sensors","outputTo":"writeDataResult","x":375,"y":675,"wires":[["b0001046.06e29"]]},{"id":"b0001046.06e29","type":"influxdb-query","z":"4ffd1aac.0699cc","name":"query device sensor","influxdbServer":"b23e5410.c016a8","queryString":"SHOW TAG VALUES \nFROM \"devices_and_sensors\" \nWITH KEY = \"sensorID\" \nWHERE devices_macAddr='{{msg.payload.macAddr}}'","outputTo":"query_result","x":552,"y":609,"wires":[["4128dd3e.cb7854","62299fa3.033c78"]]},{"id":"62299fa3.033c78","type":"function","z":"4ffd1aac.0699cc","name":"set sensors offline","func":"let setSensorMsgs = [];\nfor(let i=0;i<msg.query_result.length;i++){\n    let sensorInfo = msg.query_result[i];\n    let sensorID = sensorInfo.value;\n    let new_msg = JSON.parse(JSON.stringify(msg));\n    new_msg.payload = {\n        tags:{            \n            'devices_macAddr':msg.payload.macAddr,\n            'sensorID': sensorID.toString(),\n        },\n        fields:{\n            'sensorStatus':'OFFLINE'\n        },\n        time_stamp: Date.now()*Math.pow(10, 6),\n    }\n    setSensorMsgs.push(new_msg);\n}\nreturn [setSensorMsgs,]","outputs":"1","noerr":0,"x":778,"y":602,"wires":[["53d36f3a.3cdf88"]],"outputLabels":["sensor exist path"]},{"id":"53d36f3a.3cdf88","type":"influxdb-out","z":"4ffd1aac.0699cc","name":"set sensors status","influxdbServer":"b23e5410.c016a8","measurement":"devices_and_sensors","enableSchema":false,"dbTags":[],"dbFields":[],"x":800,"y":681,"wires":[]},{"id":"4128dd3e.cb7854","type":"debug","z":"4ffd1aac.0699cc","name":"","active":true,"console":"false","complete":"true","x":735,"y":734,"wires":[]},{"id":"514b801f.39778","type":"function","z":"d99cedd2.63744","name":"get sensor info","func":"// authenticate msg format\nlet query ='select * from sensor WHERE id = ? AND board_mac_id = ?';\nlet bindQuery = [ msg.payload.sensor_id, msg.payload.mac_addr,];\nmsg.query = query;\nmsg.bindQuery = bindQuery;\nreturn msg;","outputs":"1","noerr":0,"x":460,"y":520,"wires":[["747e557b.f3ab1c"]]},{"id":"747e557b.f3ab1c","type":"mysql-query","z":"d99cedd2.63744","mydb":"686c798c.8bfb1","name":"get sensor info","queryString":"","outputTo":"queryResultSensorInfo","x":580,"y":440,"wires":[["aa3c2af5.4620f8"]]},{"id":"30ce6440.7c79c4","type":"mysql-query","z":"d99cedd2.63744","mydb":"686c798c.8bfb1","name":"update sensor info","queryString":"","outputTo":"boardQueryResult","x":1090,"y":440,"wires":[[]]},{"id":"7eec781d.256a58","type":"function","z":"d99cedd2.63744","name":"update sensor info","func":"var moment = global.get('moment');\n\n// authenticate msg format\nlet query ='UPDATE sensor SET status=?,last_update =? WHERE id = ? AND board_mac_id = ?';\nlet bindQuery = [ \n    'ONLINE',\n    moment(msg.payload.timestamp).format(\"YYYY-MM-DD HH:mm:ss\"),\n    msg.payload.sensor_id,\n    msg.payload.mac_addr,\n];\nmsg.query = query;\nmsg.bindQuery = bindQuery;\nreturn msg;","outputs":"1","noerr":0,"x":950,"y":520,"wires":[["30ce6440.7c79c4"]]},{"id":"304041d5.1ddf16","type":"inject","z":"d99cedd2.63744","name":"check status interval","topic":"","payload":"","payloadType":"date","repeat":"20","crontab":"","once":false,"x":150,"y":660,"wires":[["b4a76495.73e7d8"]]},{"id":"c2f889de.e85988","type":"function","z":"d99cedd2.63744","name":"update board info","func":"function setBoardStatus(status,boardMacId){\n    var updateStatusMsg={\n        query:'UPDATE board SET status=? WHERE mac_id = ?',\n        bindQuery:[status,boardMacId]\n    };\n    node.send(updateStatusMsg);\n}\n\nfunction setSensorStatus(status,sensorId,boardMacId){\n    var updateStatusMsg={\n        query:'UPDATE sensor SET status=? WHERE id = ? AND board_mac_id = ?',\n        bindQuery:[status,sensorId,boardMacId]\n    };\n    node.send(updateStatusMsg);\n}\n\nvar moment = global.get('moment');\nvar currentTime= new Date();\nvar checkTime = new Date(currentTime.getTime() - 30000);\nlet boards = msg.boardsAndSensorsInfo[0];\nlet sensors = msg.boardsAndSensorsInfo[1];\nfor(var i=0;i<boards.length;i++){\n    var boardLastUpdate = new Date(boards[i].last_update);\n    if(boardLastUpdate<checkTime && boards[i].status=='ONLINE'){\n        setBoardStatus('OFFLINE',boards[i].mac_id);\n    }\n}\nfor(var i=0;i<sensors.length;i++){\n    var sensorLastUpdate = new Date(sensors[i].last_update);\n    if(sensorLastUpdate<checkTime && sensors[i].status=='ONLINE'){\n        setSensorStatus('OFFLINE',sensors[i].id,sensors[i].board_mac_id);\n    }\n}","outputs":"1","noerr":0,"x":430,"y":660,"wires":[["a5cf0fc1.d21ad8"]]},{"id":"a5cf0fc1.d21ad8","type":"mysql-query","z":"d99cedd2.63744","mydb":"686c798c.8bfb1","name":"update board and sensor info","queryString":"","outputTo":"boardQueryResult","x":690,"y":660,"wires":[[]]},{"id":"b4a76495.73e7d8","type":"mysql-query","z":"d99cedd2.63744","mydb":"686c798c.8bfb1","name":"get boards and sensors info","queryString":"select * from board;\nselect * from sensor;","outputTo":"boardsAndSensorsInfo","x":300,"y":580,"wires":[["c2f889de.e85988"]]},{"id":"ee0aa03b.8af36","type":"meo-esp-out","z":"f81c2146.a8a8","name":"action threshold","temperatureLimit":10,"humidityLimit":"60","luxLimit":2310,"x":1100,"y":480,"wires":[["7a4d38f3.fc9de"]]},{"id":"4d202c15.1fa464","type":"inject","z":"f81c2146.a8a8","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":true,"x":150,"y":60,"wires":[["ba84c306.763628"]]},{"id":"ba84c306.763628","type":"mysql-query","z":"f81c2146.a8a8","mydb":"686c798c.8bfb1","name":"check table exist","queryString":"SHOW TABLES LIKE 'device';\nSHOW TABLES LIKE 'sensor';\n","outputTo":"queryResult","x":368.8833312988281,"y":53.883331298828125,"wires":[["65f87678.17b3b8"]]},{"id":"65f87678.17b3b8","type":"function","z":"f81c2146.a8a8","name":"send init tbl command","func":"var tbl_exist = 0;\nfor (let i=0;i<2;i++){\n    if(msg.queryResult[i].length>=1){\n        tbl_exist+=1;\n    }\n}\nif(tbl_exist<2){\n    return msg;    \n}\n","outputs":1,"noerr":0,"x":598.8833312988281,"y":53.883331298828125,"wires":[["256a2176.6c5dbe"]]},{"id":"256a2176.6c5dbe","type":"mysql-query","z":"f81c2146.a8a8","mydb":"686c798c.8bfb1","name":"init tables if not exist","queryString":"CREATE TABLE IF NOT EXISTS device (\n    macAddr varchar(30) NOT NULL,\n    type varchar(10) NOT NULL,\n    status varchar(50) NOT NULL,\n    created_at DATETIME NOT NULL,\n    last_update DATETIME NOT NULL,\n    PRIMARY KEY (macAddr)\n); \n\nCREATE TABLE IF NOT EXISTS sensor (\n    name varchar(30) NOT NULL,\n    macAddr varchar(30) NOT NULL,\n    unit varchar(10),\n    status varchar(50) NOT NULL,\n    created_at DATETIME NOT NULL,\n    last_update DATETIME NOT NULL,\n    PRIMARY KEY (name,macAddr),\n    FOREIGN KEY (macAddr) REFERENCES device(macAddr) ON DELETE CASCADE\n); \n","outputTo":"queryResult","x":838.8833312988281,"y":53.883331298828125,"wires":[["70b7727b.a99acc"]]},{"id":"70b7727b.a99acc","type":"debug","z":"f81c2146.a8a8","name":"","active":true,"console":"false","complete":"true","x":1030,"y":60,"wires":[]},{"id":"fecf9c4.888b4e","type":"function","z":"f81c2146.a8a8","name":"parse payload msg","func":"msg.payload = JSON.parse(msg.payload);\nreturn msg;","outputs":1,"noerr":0,"x":179,"y":162,"wires":[["59fe4155.e34848"]]},{"id":"4617c90c.8f69","type":"function","z":"f81c2146.a8a8","name":"add board if not exist","func":"var moment = global.get('moment');\nif (msg.deviceQueryResult.length === 0) {\n    // prepare add board query\n    var addBoardQuery = 'INSERT INTO device VALUES(?,?,?,?,?)';\n    var bindQuery = [\n        msg.payload.macAddr, \n        msg.payload.type,\n        'ONLINE',\n        moment(new Date()).format(\"YYYY-MM-DD HH:mm:ss\"),\n        moment(new Date()).format(\"YYYY-MM-DD HH:mm:ss\")\n    ];\n    var addNewBoardMsg = {\n        payload:msg.payload,\n        query:addBoardQuery,\n        bindQuery:bindQuery\n    };\n    return [addNewBoardMsg, null];\n    // add board device    \n} else {\n    // do nothing    \n    return [null, msg];\n}","outputs":"2","noerr":0,"x":580.75,"y":282.75,"wires":[["7e42f19c.a8c24"],["5ec22e28.ba6428"]]},{"id":"364bee57.6f847a","type":"mqtt out","z":"f81c2146.a8a8","name":"","topic":"","qos":"","retain":"","broker":"ab67afc2.a5951","x":1680.7500610351562,"y":294.75,"wires":[]},{"id":"74890cf1.0d990c","type":"mysql-query","z":"f81c2146.a8a8","mydb":"686c798c.8bfb1","name":"check board","queryString":"","outputTo":"deviceQueryResult","x":444.75,"y":160.75,"wires":[["4617c90c.8f69"]]},{"id":"59fe4155.e34848","type":"function","z":"f81c2146.a8a8","name":"check device exist","func":"// authenticate msg format\nlet query ='select * from device where macAddr = ?';\n// console.log(msg.payload.mac_addr);\nlet bindQuery = [ msg.payload.macAddr,];\nmsg.query = query;\nmsg.bindQuery = bindQuery;\nreturn msg;","outputs":"1","noerr":0,"x":324.75,"y":283.75,"wires":[["74890cf1.0d990c"]]},{"id":"7e42f19c.a8c24","type":"mysql-query","z":"f81c2146.a8a8","mydb":"686c798c.8bfb1","name":"add board","queryString":"","outputTo":"queryResult","x":698.75,"y":158.75,"wires":[["5ec22e28.ba6428"]]},{"id":"7b55395c.22e7f","type":"function","z":"f81c2146.a8a8","name":"add sensors if not exists","func":"var moment = global.get('moment');\nfunction checkSensorExist(checkSensor, currentSensors) {\n    var isExist = false;\n    for (var i = 0; i < currentSensors.length; i++) {\n        if (checkSensor.name == currentSensors[i].name) {\n            isExist = true;\n            break;\n        }\n    }\n    return isExist;\n}\n\nfunction createQueryaddNewSensors(newSensors, macAddr) {\n    var addSensorsQuery = '';\n    var bindQuery = [];\n    for (var i = 0; i < newSensors.length; i++) {\n        var newSensor = newSensors[i];\n        addSensorsQuery += 'INSERT INTO sensor VALUES (?, ?, ?,?,?,?); ';\n        bindQuery.push(\n            newSensor.name,\n            macAddr,\n            newSensor.unit, \n            'ONLINE',\n            moment(new Date()).format(\"YYYY-MM-DD HH:mm:ss\"),\n            moment(new Date()).format(\"YYYY-MM-DD HH:mm:ss\")\n            );\n    }\n    return {\n        query: addSensorsQuery,\n        bindQuery: bindQuery\n    };\n}\n\nvar currentSensors = msg.sensorsQueryResult;\nvar deviceSensors = msg.payload.sensors;\nvar macAddr = msg.payload.macAddr;\nvar newSensors = [];\nfor (var i = 0; i < deviceSensors.length; i++) {\n    checkDeviceSensor = deviceSensors[i];\n    if (checkSensorExist(checkDeviceSensor, currentSensors) === false) {\n        newSensors.push(checkDeviceSensor);\n    }\n}\n\nif (newSensors.length > 0) {\n    var addNewSensorsQuery = createQueryaddNewSensors(newSensors, macAddr);\n    var newMsg = {\n        query:addNewSensorsQuery.query,\n        bindQuery:addNewSensorsQuery.bindQuery,\n        payload: msg.payload\n    };\n    return [newMsg, null];\n} else {\n    return [null, msg];\n}","outputs":"2","noerr":0,"x":1144.75,"y":285.75,"wires":[["3664dfc0.83ee1"],["c98cacf8.97f31"]]},{"id":"3664dfc0.83ee1","type":"mysql-query","z":"f81c2146.a8a8","mydb":"686c798c.8bfb1","name":"add sensor","queryString":"","outputTo":"addSensorResult","x":1347.75,"y":144.75,"wires":[["c98cacf8.97f31"]]},{"id":"1fcdeb95.b4e9ac","type":"mysql-query","z":"f81c2146.a8a8","mydb":"686c798c.8bfb1","name":"get sensors Info","queryString":"","outputTo":"sensorsQueryResult","x":954.75,"y":156.75,"wires":[["7b55395c.22e7f"]]},{"id":"c98cacf8.97f31","type":"function","z":"f81c2146.a8a8","name":"send authenticated message","func":"var macAddr = msg.payload.macAddr;\n\nvar authenticatedMsg ={\n    type:'register',\n    status:'OK'\n}\nvar sendAuthenticatedMsg ={\n    topic:'icse/'+macAddr+'/action',\n    payload:authenticatedMsg\n}\nreturn sendAuthenticatedMsg;","outputs":1,"noerr":0,"x":1464.7500610351562,"y":300.75,"wires":[["364bee57.6f847a"]]},{"id":"5ec22e28.ba6428","type":"function","z":"f81c2146.a8a8","name":"get current device sensors","func":"// authenticate msg format\nlet query ='select * from sensor where macAddr = ?';\nlet bindQuery = [ msg.payload.macAddr,];\nmsg.query = query;\nmsg.bindQuery = bindQuery;\nreturn msg;","outputs":"1","noerr":0,"x":856.75,"y":284.75,"wires":[["1fcdeb95.b4e9ac"]]},{"id":"837fcb87.3a7e1","type":"mqtt in","z":"f81c2146.a8a8","name":"","topic":"icse/data","qos":"2","broker":"c045e5a7.572c08","x":73,"y":478.8833312988281,"wires":[["381d37b.6d57c48"]]},{"id":"381d37b.6d57c48","type":"function","z":"f81c2146.a8a8","name":"parse payload msg","func":"msg.payload = JSON.parse(msg.payload);\nmsg.receivedTime = new Date();\nreturn msg;","outputs":1,"noerr":0,"x":130,"y":380,"wires":[["ae8b435f.2d5c38"]]},{"id":"1d04c016.7f3cb","type":"influxdb-write-data","z":"f81c2146.a8a8","name":"add time serie data","influxdbServer":"9d158d3f.2c3128","dataInput":"serieDataList","measurement":"data","outputTo":"writeDataResult","x":970,"y":360,"wires":[["ee0aa03b.8af36"]]},{"id":"33833e6f.8f2b42","type":"function","z":"f81c2146.a8a8","name":"add time serie data","func":"//\tC: [1, 100]; \t%: [0, 100],\tlux: [1, 65535]\nlet macAddr = msg.payload.macAddr;\nlet sensorData = msg.payload.sensorsData;\nlet sensorsInfo = msg.sensorsInfo;\n\nfunction getSensorInfo(name, macAddr) {\n    for (var i = 0; i < sensorsInfo.length; i++) {\n        if (sensorsInfo[i].name == name && sensorsInfo[i].macAddr == macAddr) {\n            return sensorsInfo[i];\n        }\n    }\n}\n\nlet serieDataList = [];\nmsg.addedSensors = [];\nfor (var i = 0; i < sensorData.length; i++) {\n    var sensorInfo = getSensorInfo(sensorData[i].name, macAddr);\n    sensorData[i].unit = sensorInfo.unit;\n    if (sensorInfo.unit == 'Lux' || sensorInfo.unit == '%' || sensorInfo.unit == 'C') {\n        serieDataList.push({\n            tags: {\n                'macAddr': macAddr,\n                'name': sensorData[i].name,\n            },\n            fields: {\n                'value': sensorData[i].value\n            },\n            time_stamp: msg.receivedTime.getTime() * Math.pow(10, 6)\n        });\n    }\n}\nlet sendMsg = msg;\nif (serieDataList.length > 0) {\n    sendMsg.serieDataList = serieDataList;\n    node.send([sendMsg, null]);\n} else {\n    node.send([null, sendMsg]);\n}","outputs":"2","noerr":0,"x":870,"y":480,"wires":[["1d04c016.7f3cb"],["ee0aa03b.8af36"]]},{"id":"8412d4e1.0b65e","type":"mysql-query","z":"f81c2146.a8a8","mydb":"686c798c.8bfb1","name":"get sensors Info","queryString":"","outputTo":"sensorsInfo","x":355.8833312988281,"y":476.8833312988281,"wires":[["7ea033ce.d44d5c"]]},{"id":"ae8b435f.2d5c38","type":"function","z":"f81c2146.a8a8","name":"get sensors info","func":"// authenticate msg format\nlet query ='select * from sensor where macAddr = ?';\n// console.log(msg.payload.mac_addr);\nlet bindQuery = [ msg.payload.macAddr,];\nmsg.query = query;\nmsg.bindQuery = bindQuery;\nreturn msg;","outputs":"1","noerr":0,"x":352.8833312988281,"y":386.8833312988281,"wires":[["8412d4e1.0b65e"]]},{"id":"7a4d38f3.fc9de","type":"mqtt out","z":"f81c2146.a8a8","name":"send control msg","topic":"","qos":"","retain":"","broker":"ab67afc2.a5951","x":1310,"y":480,"wires":[]},{"id":"1c8d46ba.151ad1","type":"function","z":"f81c2146.a8a8","name":"update data","func":"var moment = global.get('moment');\nlet updateDbQuery = '';\nlet bindQuery =[];\nlet deviceInfo = msg.deviceInfo[0];\nlet deviceLastUpdate = new Date(deviceInfo.last_update);\nlet currentTime = msg.receivedTime;\nif(currentTime.getTime() - deviceLastUpdate.getTime() > 5000){ //update device last update\n    updateDbQuery+='UPDATE device SET last_update = ?, status=\"ONLINE\" where macAddr = ? ;';    \n    bindQuery.push(\n        moment(currentTime).format(\"YYYY-MM-DD HH:mm:ss\"),\n        msg.payload.macAddr);   \n}\n\nlet sensorsInfo = msg.sensorsInfo;\nfor(let i=0;i<sensorsInfo.length;i++){\n    let sensorInfo =  sensorsInfo[i];\n    let sensorLastUpdate = new Date(sensorInfo.last_update);\n    if(currentTime.getTime() - sensorLastUpdate.getTime() >10000){\n        updateDbQuery+=' UPDATE sensor SET last_update = ?, status=\"ONLINE\" where macAddr = ? and name=? ;';    \n        bindQuery.push(\n            moment(currentTime).format(\"YYYY-MM-DD HH:mm:ss\"),\n            msg.payload.macAddr,\n            sensorInfo.name\n        );   \n    }\n}\n\nif(updateDbQuery.length>1){\n    msg.query = updateDbQuery;\n    msg.bindQuery = bindQuery;\n    \n    return [msg,null];    \n}else{\n    return [null,msg];\n}\n","outputs":"2","noerr":0,"x":590,"y":480,"wires":[["87893728.b333e8","b351bff8.39a4d"],["33833e6f.8f2b42"]]},{"id":"87893728.b333e8","type":"mysql-query","z":"f81c2146.a8a8","mydb":"686c798c.8bfb1","name":"","queryString":"","outputTo":"queryResult","x":680,"y":380,"wires":[["33833e6f.8f2b42"]]},{"id":"b9e7e094.26d608","type":"mysql-query","z":"f81c2146.a8a8","mydb":"686c798c.8bfb1","name":"get device info","queryString":"","outputTo":"deviceInfo","x":460,"y":560,"wires":[["1c8d46ba.151ad1"]]},{"id":"7ea033ce.d44d5c","type":"function","z":"f81c2146.a8a8","name":"get devcie info","func":"// authenticate msg format\nlet query ='select * from device where macAddr = ?';\n// console.log(msg.payload.mac_addr);\nlet bindQuery = [ msg.payload.macAddr,];\nmsg.query = query;\nmsg.bindQuery = bindQuery;\nreturn msg;","outputs":1,"noerr":0,"x":260,"y":560,"wires":[["b9e7e094.26d608"]]},{"id":"c24a8209.1c2248","type":"inject","z":"f81c2146.a8a8","name":"set device status","topic":"","payload":"","payloadType":"date","repeat":"10","crontab":"","once":false,"x":136,"y":646,"wires":[["8b426b3c.a8d478"]]},{"id":"bb7b47a.78e74b8","type":"mysql-query","z":"f81c2146.a8a8","mydb":"686c798c.8bfb1","name":"get sensors Info","queryString":"","outputTo":"sensorsInfo","x":520,"y":640,"wires":[["40e7ad0e.f0b734"]]},{"id":"8b426b3c.a8d478","type":"function","z":"f81c2146.a8a8","name":"get sensors info","func":"// authenticate msg format\nlet query ='select * from sensor';\n// console.log(msg.payload.mac_addr);\nlet bindQuery = [];\nmsg.query = query;\nmsg.receivedTime = new Date();\nmsg.bindQuery = bindQuery;\nreturn msg;","outputs":"1","noerr":0,"x":340,"y":640,"wires":[["bb7b47a.78e74b8"]]},{"id":"40e7ad0e.f0b734","type":"function","z":"f81c2146.a8a8","name":"get devcies info","func":"// authenticate msg format\nlet query ='select * from device';\n// console.log(msg.payload.mac_addr);\nlet bindQuery = [];\nmsg.query = query;\nmsg.bindQuery = bindQuery;\nreturn msg;","outputs":1,"noerr":0,"x":700,"y":640,"wires":[["97879431.fe6e2"]]},{"id":"97879431.fe6e2","type":"mysql-query","z":"f81c2146.a8a8","mydb":"686c798c.8bfb1","name":"get devices info","queryString":"","outputTo":"devicesInfo","x":880,"y":640,"wires":[["e15eff4d.352558"]]},{"id":"e15eff4d.352558","type":"function","z":"f81c2146.a8a8","name":"update data","func":"var moment = global.get('moment');\nlet updateDbQuery = '';\nlet bindQuery =[];\nlet currentTime = msg.receivedTime;\n\nfor(let i =0;i<msg.devicesInfo.length;i++){\n    let deviceInfo = msg.devicesInfo[i];\n    let deviceLastUpdate = new Date(deviceInfo.last_update);\n    if(currentTime.getTime() - deviceLastUpdate.getTime() > 10000){ //update device last update\n        updateDbQuery+='UPDATE device SET status = \"OFFLINE\" where macAddr = ? ;';    \n        bindQuery.push(\n        deviceInfo.macAddr);    \n    }    \n}\n\nlet sensorsInfo = msg.sensorsInfo;\nfor(let i=0;i<sensorsInfo.length;i++){\n    let sensorInfo =  sensorsInfo[i];\n    let sensorLastUpdate = new Date(sensorInfo.last_update);\n    if(currentTime.getTime() - sensorLastUpdate.getTime() >10000){\n        updateDbQuery+=' UPDATE sensor SET status = \"OFFLINE\" where macAddr = ? and name=? ;';    \n        bindQuery.push(\n            sensorInfo.macAddr,\n            sensorInfo.name\n        );\n    }\n}\n\nif(updateDbQuery.length>1){\n    msg.query = updateDbQuery;\n    msg.bindQuery = bindQuery;\n    node.send(msg);    \n}","outputs":"1","noerr":0,"x":1050,"y":600,"wires":[["2606da50.3dbb86"]]},{"id":"2606da50.3dbb86","type":"mysql-query","z":"f81c2146.a8a8","mydb":"686c798c.8bfb1","name":"","queryString":"","outputTo":"queryResult","x":1220,"y":560,"wires":[[]]},{"id":"b351bff8.39a4d","type":"debug","z":"f81c2146.a8a8","name":"","active":true,"console":"false","complete":"true","x":1052,"y":670,"wires":[]}]