[{"id":"f81c2146.a8a8","type":"tab","label":"cong-flow","disabled":false,"info":""},{"id":"c045e5a7.572c08","type":"mqtt-broker","z":"","broker":"mqtt","port":"1883","clientid":"","usetls":false,"compatmode":true,"keepalive":"60","cleansession":true,"willTopic":"","willQos":"0","willPayload":"","birthTopic":"","birthQos":"0","birthPayload":""},{"id":"686c798c.8bfb1","type":"MySQLdatabase","z":"","host":"mysql","port":"3306","db":"iot","tz":""},{"id":"9d158d3f.2c3128","type":"influxdb-server","z":"","host":"influxdb","port":"8086","database":"iot"},{"id":"ec988669.12d2b","type":"mqtt-broker","z":"","broker":"mqtt","port":"1883","clientid":"","usetls":false,"compatmode":true,"keepalive":"60","cleansession":true,"willTopic":"","willQos":"0","willPayload":"","birthTopic":"","birthQos":"0","birthPayload":""},{"id":"dac00537.fbb0d8","type":"ui_base","theme":{"name":"theme-light","lightTheme":{"default":"#0094CE","baseColor":"#0094CE","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif","edited":true,"reset":false},"darkTheme":{"default":"#097479","baseColor":"#097479","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif","edited":false},"customTheme":{"name":"Untitled Theme 1","default":"#4B7930","baseColor":"#4B7930","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"},"themeState":{"base-color":{"default":"#0094CE","value":"#0094CE","edited":false},"page-titlebar-backgroundColor":{"value":"#0094CE","edited":false},"page-backgroundColor":{"value":"#fafafa","edited":false},"page-sidebar-backgroundColor":{"value":"#ffffff","edited":false},"group-textColor":{"value":"#1bbfff","edited":false},"group-borderColor":{"value":"#ffffff","edited":false},"group-backgroundColor":{"value":"#ffffff","edited":false},"widget-textColor":{"value":"#111111","edited":false},"widget-backgroundColor":{"value":"#0094ce","edited":false},"widget-borderColor":{"value":"#ffffff","edited":false},"base-font":{"value":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"}}},"site":{"name":"Node-RED Dashboard","hideToolbar":"false","allowSwipe":"false","dateFormat":"DD/MM/YYYY","sizes":{"sx":48,"sy":48,"gx":6,"gy":6,"cx":6,"cy":6,"px":0,"py":0}}},{"id":"82c865e8.28d868","type":"mqtt in","z":"f81c2146.a8a8","name":"","topic":"bkcloud/newDevice","qos":"2","broker":"c045e5a7.572c08","x":113,"y":282.95001220703125,"wires":[["fecf9c4.888b4e"]]},{"id":"4d202c15.1fa464","type":"inject","z":"f81c2146.a8a8","name":"","topic":"","payload":"","payloadType":"date","repeat":"10","crontab":"","once":true,"x":150,"y":40,"wires":[["ba84c306.763628"]]},{"id":"ba84c306.763628","type":"mysql-query","z":"f81c2146.a8a8","mydb":"686c798c.8bfb1","name":"check table exist","queryString":"SHOW TABLES LIKE 'device';\nSHOW TABLES LIKE 'sensor';\n","outputTo":"queryResult","x":368.8833312988281,"y":53.883331298828125,"wires":[["65f87678.17b3b8"]]},{"id":"65f87678.17b3b8","type":"function","z":"f81c2146.a8a8","name":"send init tbl command","func":"var tbl_exist = 0;\nfor (let i=0;i<2;i++){\n    if(msg.queryResult[i].length>=1){\n        tbl_exist+=1;\n    }\n}\nif(tbl_exist<2){\n    return msg;    \n}\n","outputs":1,"noerr":0,"x":598.8833312988281,"y":53.883331298828125,"wires":[["256a2176.6c5dbe"]]},{"id":"256a2176.6c5dbe","type":"mysql-query","z":"f81c2146.a8a8","mydb":"686c798c.8bfb1","name":"init tables if not exist","queryString":"CREATE TABLE device (\nmacAddr \tVARCHAR(255) \tNOT NULL,\ntype\t\tVARCHAR(255) \tNOT NULL,\nstatus \t\tVARCHAR(255) \tNOT NULL,\ncreated_at \tDATETIME \tNOT NULL,\nlast_update DATETIME    NOT NULL,\nPRIMARY KEY (macAddr)\n);\n\n\nCREATE TABLE sensor (\nname \t\tVARCHAR(255)\t\tNOT NULL,\nmacAddr \tVARCHAR(255) \tNOT NULL,\nunit \t\tVARCHAR(255),\nstatus \t\tVARCHAR(255) \tNOT NULL,\ncreated_at \tDATETIME\tNOT NULL,\nlast_update DATETIME    NOT NULL,\nPRIMARY KEY (name, macAddr),\nCONSTRAINT fk_device FOREIGN KEY (macAddr) REFERENCES device(macAddr) ON DELETE CASCADE\n);\n","outputTo":"queryResult","x":838.8833312988281,"y":53.883331298828125,"wires":[["70b7727b.a99acc"]]},{"id":"70b7727b.a99acc","type":"debug","z":"f81c2146.a8a8","name":"","active":true,"console":"false","complete":"true","x":1030,"y":60,"wires":[]},{"id":"fecf9c4.888b4e","type":"function","z":"f81c2146.a8a8","name":"parse payload msg","func":"msg.payload = JSON.parse(msg.payload);\nreturn msg;","outputs":1,"noerr":0,"x":179,"y":162,"wires":[["59fe4155.e34848"]]},{"id":"4617c90c.8f69","type":"function","z":"f81c2146.a8a8","name":"add device if not exist","func":"var moment = global.get('moment');\nif (msg.deviceQueryResult.length === 0) {\n    // prepare add board query\n    var addBoardQuery = 'INSERT INTO device VALUES(?,?,?,?,?)';\n    var bindQuery = [\n        msg.payload.macAddr, \n        msg.payload.type,\n        'ONLINE',\n        moment(new Date()).format(\"YYYY-MM-DD HH:mm:ss\"),\n        moment(new Date()).format(\"YYYY-MM-DD HH:mm:ss\")\n    ];\n    var addNewBoardMsg = {\n        payload:msg.payload,\n        query:addBoardQuery,\n        bindQuery:bindQuery\n    };\n    return [addNewBoardMsg, null];\n    // add board device    \n} else {\n    // do nothing    \n    return [null, msg];\n}","outputs":"2","noerr":0,"x":600,"y":280,"wires":[["7e42f19c.a8c24"],["5ec22e28.ba6428"]]},{"id":"364bee57.6f847a","type":"mqtt out","z":"f81c2146.a8a8","name":"","topic":"","qos":"","retain":"","broker":"c045e5a7.572c08","x":1680.7500610351562,"y":294.75,"wires":[]},{"id":"74890cf1.0d990c","type":"mysql-query","z":"f81c2146.a8a8","mydb":"686c798c.8bfb1","name":"check device","queryString":"","outputTo":"deviceQueryResult","x":444.75,"y":160.75,"wires":[["4617c90c.8f69"]]},{"id":"59fe4155.e34848","type":"function","z":"f81c2146.a8a8","name":"check device exist","func":"// authenticate msg format\nlet query ='select * from device where macAddr = ?';\n// console.log(msg.payload.mac_addr);\nlet bindQuery = [ msg.payload.macAddr,];\nmsg.query = query;\nmsg.bindQuery = bindQuery;\nreturn msg;","outputs":"1","noerr":0,"x":350,"y":280,"wires":[["74890cf1.0d990c"]]},{"id":"7e42f19c.a8c24","type":"mysql-query","z":"f81c2146.a8a8","mydb":"686c798c.8bfb1","name":"add board","queryString":"","outputTo":"queryResult","x":698.75,"y":158.75,"wires":[["5ec22e28.ba6428"]]},{"id":"7b55395c.22e7f","type":"function","z":"f81c2146.a8a8","name":"add sensors if not exists","func":"var moment = global.get('moment');\nfunction checkSensorExist(checkSensor, currentSensors) {\n    var isExist = false;\n    for (var i = 0; i < currentSensors.length; i++) {\n        if (checkSensor.name == currentSensors[i].name) {\n            isExist = true;\n            break;\n        }\n    }\n    return isExist;\n}\n\nfunction createQueryaddNewSensors(newSensors, macAddr) {\n    var addSensorsQuery = '';\n    var bindQuery = [];\n    for (var i = 0; i < newSensors.length; i++) {\n        var newSensor = newSensors[i];\n        addSensorsQuery += 'INSERT INTO sensor VALUES (?, ?, ?,?,?,?); ';\n        bindQuery.push(\n            newSensor.name,\n            macAddr,\n            newSensor.unit, \n            'ONLINE',\n            moment(new Date()).format(\"YYYY-MM-DD HH:mm:ss\"),\n            moment(new Date()).format(\"YYYY-MM-DD HH:mm:ss\")\n            );\n    }\n    return {\n        query: addSensorsQuery,\n        bindQuery: bindQuery\n    };\n}\n\nvar currentSensors = msg.sensorsQueryResult;\nvar deviceSensors = msg.payload.sensors;\nvar macAddr = msg.payload.macAddr;\nvar newSensors = [];\nfor (var i = 0; i < deviceSensors.length; i++) {\n    checkDeviceSensor = deviceSensors[i];\n    if (checkSensorExist(checkDeviceSensor, currentSensors) === false) {\n        newSensors.push(checkDeviceSensor);\n    }\n}\n\nif (newSensors.length > 0) {\n    var addNewSensorsQuery = createQueryaddNewSensors(newSensors, macAddr);\n    var newMsg = {\n        query:addNewSensorsQuery.query,\n        bindQuery:addNewSensorsQuery.bindQuery,\n        payload: msg.payload\n    };\n    return [newMsg, null];\n} else {\n    return [null, msg];\n}","outputs":"2","noerr":0,"x":1144.75,"y":285.75,"wires":[["3664dfc0.83ee1"],["c98cacf8.97f31"]]},{"id":"3664dfc0.83ee1","type":"mysql-query","z":"f81c2146.a8a8","mydb":"686c798c.8bfb1","name":"add sensor","queryString":"","outputTo":"addSensorResult","x":1347.75,"y":144.75,"wires":[["c98cacf8.97f31"]]},{"id":"1fcdeb95.b4e9ac","type":"mysql-query","z":"f81c2146.a8a8","mydb":"686c798c.8bfb1","name":"get sensors Info","queryString":"","outputTo":"sensorsQueryResult","x":954.75,"y":156.75,"wires":[["7b55395c.22e7f"]]},{"id":"c98cacf8.97f31","type":"function","z":"f81c2146.a8a8","name":"send authenticated message","func":"var macAddr = msg.payload.macAddr;\n\nvar authenticatedMsg ={\n    type:'register',\n    status:'OK'\n}\nvar sendAuthenticatedMsg ={\n    topic:'bkcloud/'+macAddr+'/action',\n    payload:authenticatedMsg\n}\nreturn sendAuthenticatedMsg;","outputs":1,"noerr":0,"x":1464.7500610351562,"y":300.75,"wires":[["364bee57.6f847a"]]},{"id":"5ec22e28.ba6428","type":"function","z":"f81c2146.a8a8","name":"get current device sensors","func":"// authenticate msg format\nlet query ='select * from sensor where macAddr = ?';\nlet bindQuery = [ msg.payload.macAddr,];\nmsg.query = query;\nmsg.bindQuery = bindQuery;\nreturn msg;","outputs":"1","noerr":0,"x":856.75,"y":284.75,"wires":[["1fcdeb95.b4e9ac"]]},{"id":"837fcb87.3a7e1","type":"mqtt in","z":"f81c2146.a8a8","name":"","topic":"bkcloud/data","qos":"2","broker":"c045e5a7.572c08","x":70,"y":520,"wires":[["31a293f3.757cac"]]},{"id":"1d04c016.7f3cb","type":"influxdb-write-data","z":"f81c2146.a8a8","name":"add time serie data","influxdbServer":"9d158d3f.2c3128","dataInput":"serieDataList","measurement":"data","outputTo":"writeDataResult","x":1310,"y":480,"wires":[[]]},{"id":"33833e6f.8f2b42","type":"function","z":"f81c2146.a8a8","name":"valid serie data and write to influxdb","func":"//\tC: [1, 100]; \t%: [0, 100],\tlux: [1, 65535]\nlet macAddr = msg.payload.macAddr;\nlet sensorData = msg.payload.sensorsData;\nlet sensorsInfo = msg.deviceAndSensorsInfo[1];\n\nfunction getSensorInfo(name, macAddr) {\n    for (var i = 0; i < sensorsInfo.length; i++) {\n        if (sensorsInfo[i].name == name && sensorsInfo[i].macAddr == macAddr) {\n            return sensorsInfo[i];\n        }\n    }\n}\n\nlet serieDataList = [];\nmsg.addedSensors = [];\nfor (var i = 0; i < sensorData.length; i++) {\n    let checkSensorData = sensorData[i];\n    var sensorInfo = getSensorInfo(checkSensorData.name, macAddr);\n    // checkSensorData.unit = sensorInfo.unit;\n    if ((sensorInfo.unit == 'Lux' &&checkSensorData.value>=1 &&checkSensorData.value<=65535) ||\n        sensorInfo.unit == 'C' &&checkSensorData.value>=0 &&checkSensorData.value<=100) {\n        serieDataList.push({\n            tags: {\n                'macAddr': macAddr,\n                'name': checkSensorData.name,\n            },\n            fields: {\n                'unit':sensorInfo.unit,\n                'value': checkSensorData.value\n            },\n            time_stamp: msg.receivedTime.getTime() * Math.pow(10, 6)\n        });\n    }\n}\nlet sendMsg = msg;\nif (serieDataList.length > 0) {\n    sendMsg.serieDataList = serieDataList;\n    node.send(sendMsg);\n    // node.send([sendMsg, null]);\n} \n// else {\n//     node.send([null, sendMsg]);\n// }","outputs":"1","noerr":0,"x":1030,"y":480,"wires":[["1d04c016.7f3cb"]]},{"id":"8412d4e1.0b65e","type":"mysql-query","z":"f81c2146.a8a8","mydb":"686c798c.8bfb1","name":"get Info","queryString":"","outputTo":"deviceAndSensorsInfo","x":600,"y":380,"wires":[["1c8d46ba.151ad1"]]},{"id":"ae8b435f.2d5c38","type":"function","z":"f81c2146.a8a8","name":"get db info","func":"// authenticate msg format\nlet query ='select * from device where macAddr = ?;';\nquery +='select * from sensor where macAddr = ?;';\n// console.log(msg.payload.mac_addr);\nlet bindQuery = [ msg.payload.macAddr, msg.payload.macAddr];\nmsg.query = query;\nmsg.bindQuery = bindQuery;\nreturn msg;","outputs":"1","noerr":0,"x":510,"y":480,"wires":[["8412d4e1.0b65e"]]},{"id":"7a4d38f3.fc9de","type":"mqtt out","z":"f81c2146.a8a8","name":"send control msg","topic":"","qos":"","retain":"","broker":"ec988669.12d2b","x":1850,"y":560,"wires":[]},{"id":"1c8d46ba.151ad1","type":"function","z":"f81c2146.a8a8","name":"update database","func":"var moment = global.get('moment');\nlet updateDbQuery = '';\nlet bindQuery =[];\nlet deviceInfo = msg.deviceAndSensorsInfo[0][0];\nlet deviceLastUpdate = new Date(deviceInfo.last_update);\nlet currentTime = msg.receivedTime;\n\nif(currentTime.getTime() - deviceLastUpdate.getTime() > 10000){ //update device last update\n    updateDbQuery+='UPDATE device SET last_update = ?, status=\"ONLINE\" where macAddr = ? ;';    \n    bindQuery.push(\n        moment(currentTime).format(\"YYYY-MM-DD HH:mm:ss\"),\n        msg.payload.macAddr);   \n}\n\nlet sensorsInfo = msg.deviceAndSensorsInfo[1];\nlet sensorsData = msg.payload.sensorsData;\nfor(let i=0;i<sensorsInfo.length;i++){\n    let sensorInfo =  sensorsInfo[i];\n    let sensorExist = false;\n    for (let i=0;i<sensorsData.length;i++){\n        if (sensorsData[i].name ==sensorInfo.name){\n            sensorExist = true;\n            break;\n        }\n    }\n    if(sensorExist===true){\n        let sensorLastUpdate = new Date(sensorInfo.last_update);\n        if(currentTime.getTime() - sensorLastUpdate.getTime() >10000){\n            updateDbQuery+=' UPDATE sensor SET last_update = ?, status=\"ONLINE\" where macAddr = ? and name=? ;';    \n            bindQuery.push(\n                moment(currentTime).format(\"YYYY-MM-DD HH:mm:ss\"),\n                msg.payload.macAddr,\n                sensorInfo.name\n            );   \n        }\n    }\n}\n\nif(updateDbQuery.length>1){\n    msg.query = updateDbQuery;\n    msg.bindQuery = bindQuery;\n    \n    return [msg,null];    \n}else{\n    return [null,msg];\n}\n","outputs":"2","noerr":0,"x":730,"y":480,"wires":[["87893728.b333e8"],["33833e6f.8f2b42"]]},{"id":"87893728.b333e8","type":"mysql-query","z":"f81c2146.a8a8","mydb":"686c798c.8bfb1","name":"update db","queryString":"","outputTo":"queryResult","x":870,"y":380,"wires":[["33833e6f.8f2b42"]]},{"id":"c24a8209.1c2248","type":"inject","z":"f81c2146.a8a8","name":"check device status","topic":"","payload":"","payloadType":"date","repeat":"30","crontab":"","once":false,"x":140,"y":880,"wires":[["8b426b3c.a8d478"]]},{"id":"bb7b47a.78e74b8","type":"mysql-query","z":"f81c2146.a8a8","mydb":"686c798c.8bfb1","name":"get devices Info","queryString":"","outputTo":"devicesInfo","x":520,"y":880,"wires":[["f622ad65.b8246"]]},{"id":"8b426b3c.a8d478","type":"function","z":"f81c2146.a8a8","name":"get devices info","func":"// authenticate msg format\nlet query ='select * from device';\n// console.log(msg.payload.mac_addr);\nlet bindQuery = [];\nmsg.query = query;\nmsg.receivedTime = new Date();\nmsg.bindQuery = bindQuery;\nreturn msg;","outputs":"1","noerr":0,"x":340,"y":880,"wires":[["bb7b47a.78e74b8"]]},{"id":"40e7ad0e.f0b734","type":"function","z":"f81c2146.a8a8","name":"get devcies info","func":"// authenticate msg format\nlet query ='select * from device';\n// console.log(msg.payload.mac_addr);\nlet bindQuery = [];\nmsg.query = query;\nmsg.bindQuery = bindQuery;\nreturn msg;","outputs":1,"noerr":0,"x":920,"y":820,"wires":[["97879431.fe6e2"]]},{"id":"97879431.fe6e2","type":"mysql-query","z":"f81c2146.a8a8","mydb":"686c798c.8bfb1","name":"get devices info","queryString":"","outputTo":"devicesInfo","x":980,"y":880,"wires":[["e15eff4d.352558"]]},{"id":"e15eff4d.352558","type":"function","z":"f81c2146.a8a8","name":"update data","func":"var moment = global.get('moment');\nlet updateDbQuery = '';\nlet bindQuery =[];\nlet currentTime = msg.receivedTime;\n\nfor(let i =0;i<msg.devicesInfo.length;i++){\n    let deviceInfo = msg.devicesInfo[i];\n    let deviceLastUpdate = new Date(deviceInfo.last_update);\n    if(currentTime.getTime() - deviceLastUpdate.getTime() > 10000){ //update device last update\n        updateDbQuery+='UPDATE device SET status = \"OFFLINE\" where macAddr = ? ;';    \n        bindQuery.push(\n        deviceInfo.macAddr);    \n    }    \n}\n\nlet sensorsInfo = msg.sensorsInfo;\nfor(let i=0;i<sensorsInfo.length;i++){\n    let sensorInfo =  sensorsInfo[i];\n    let sensorLastUpdate = new Date(sensorInfo.last_update);\n    if(currentTime.getTime() - sensorLastUpdate.getTime() >10000){\n        updateDbQuery+=' UPDATE sensor SET status = \"OFFLINE\" where macAddr = ? and name=? ;';    \n        bindQuery.push(\n            sensorInfo.macAddr,\n            sensorInfo.name\n        );\n    }\n}\n\nif(updateDbQuery.length>1){\n    msg.query = updateDbQuery;\n    msg.bindQuery = bindQuery;\n    node.send(msg);    \n}","outputs":"1","noerr":0,"x":1150,"y":880,"wires":[["2606da50.3dbb86"]]},{"id":"2606da50.3dbb86","type":"mysql-query","z":"f81c2146.a8a8","mydb":"686c798c.8bfb1","name":"","queryString":"","outputTo":"queryResult","x":1290,"y":880,"wires":[[]]},{"id":"31a293f3.757cac","type":"function","z":"f81c2146.a8a8","name":"parse payload - routing msg","func":"msg.payload = JSON.parse(msg.payload);\nmsg.receivedTime = new Date();\nlet msgType =  msg.payload.type;\n\nif(msgType=='data'){ // forward msg to process data message flow\n    node.send([msg,null]);\n}else if(msgType=='motion'){ // forward msg to process motion message flow\n    node.send([null,msg]);\n    \n}\n","outputs":"2","noerr":0,"x":280,"y":520,"wires":[["ae8b435f.2d5c38"],["f6bb2385.c4101"]],"outputLabels":["flow process data message","flow process motion message"]},{"id":"f6bb2385.c4101","type":"function","z":"f81c2146.a8a8","name":"get db info","func":"// authenticate msg format\nlet query ='select * from device where macAddr = ?;';\nquery +='select * from sensor where macAddr = ? and name=?;';\n// console.log(msg.payload.mac_addr);\nlet bindQuery = [ \n    msg.payload.macAddr, \n    msg.payload.macAddr, \n    msg.payload.name\n    ];\nmsg.query = query;\nmsg.bindQuery = bindQuery;\nreturn msg;","outputs":"1","noerr":0,"x":510,"y":560,"wires":[["fcabdceb.205038"]]},{"id":"fcabdceb.205038","type":"mysql-query","z":"f81c2146.a8a8","mydb":"686c798c.8bfb1","name":"get Info","queryString":"","outputTo":"deviceAndSensorsInfo","x":620,"y":660,"wires":[["b7e41f14.ed7558"]]},{"id":"b7e41f14.ed7558","type":"function","z":"f81c2146.a8a8","name":"update database","func":"var moment = global.get('moment');\nlet updateDbQuery = '';\nlet bindQuery =[];\nlet deviceInfo = msg.deviceAndSensorsInfo[0][0];\nlet motionSensorInfo = msg.deviceAndSensorsInfo[1][0];\nlet deviceLastUpdate = new Date(deviceInfo.last_update);\nlet motionSensorLastUpdate =new Date(motionSensorInfo.last_update);\nlet receivedTime = msg.receivedTime;\n\nif(receivedTime.getTime() - deviceLastUpdate.getTime() > 10000){ //update device last update\n    updateDbQuery+='UPDATE device SET last_update = ?, status=\"ONLINE\" where macAddr = ? ;';    \n    bindQuery.push(\n        moment(receivedTime).format(\"YYYY-MM-DD HH:mm:ss\"),\n        msg.payload.macAddr);   \n}\n\nif(receivedTime.getTime() - motionSensorLastUpdate.getTime() > 10000){ //update motion sensor last update\n    updateDbQuery+='UPDATE sensor SET last_update = ?, status=\"ONLINE\" where macAddr = ? and name = ? ;';    \n    bindQuery.push(\n        moment(receivedTime).format(\"YYYY-MM-DD HH:mm:ss\"),\n        msg.payload.macAddr,\n        msg.payload.name\n    );   \n}\n\nif(updateDbQuery.length>1){\n    msg.query = updateDbQuery;\n    msg.bindQuery = bindQuery;\n    \n    return [null,msg];    \n}else{\n    return [msg,null];\n}\n","outputs":"2","noerr":0,"x":730,"y":560,"wires":[["c4ab3782.87d7f"],["a4acfeb3.8438f"]]},{"id":"a4acfeb3.8438f","type":"mysql-query","z":"f81c2146.a8a8","mydb":"686c798c.8bfb1","name":"update db","queryString":"","outputTo":"queryResult","x":930,"y":640,"wires":[["c4ab3782.87d7f"]]},{"id":"c4ab3782.87d7f","type":"influxdb-query","z":"f81c2146.a8a8","name":"query last light data","influxdbServer":"9d158d3f.2c3128","queryString":"SELECT last(value) as value, time FROM data \nWHERE macAddr = '{{msg.payload.macAddr}}' and unit= 'Lux'","outputTo":"lastLightData","x":1080,"y":560,"wires":[["53393215.a78cec"]]},{"id":"b125c985.38935","type":"function","z":"f81c2146.a8a8","name":"send action to device","func":"let currentTime = (new Date(msg.receivedTime)).getTime();\nlet lastLightData = msg.lastLightData[0];\nlet lastTempData = msg.lastTempData[0];\nif (currentTime - (new Date(lastLightData.time)).getTime() <= 30000 &&\n    currentTime - (new Date(lastTempData.time)).getTime() <= 30000 &&\n    lastLightData.value > 100 && lastTempData.value > 30) {\n        let deviceTopic = 'bkcloud/'+msg.payload.macAddr+'/action';\n        let sendActionMsg = {\n            topic:deviceTopic,\n            payload:{\n                type: \"servoAction\",\n                action: \"ON\"    \n            }\n        };\n        node.send(sendActionMsg);\n}","outputs":1,"noerr":0,"x":1620,"y":560,"wires":[["7a4d38f3.fc9de"]]},{"id":"53393215.a78cec","type":"influxdb-query","z":"f81c2146.a8a8","name":"query last temperature data","influxdbServer":"9d158d3f.2c3128","queryString":"SELECT last(value) as value, time FROM data \nWHERE macAddr = '{{msg.payload.macAddr}}' and unit= 'C'","outputTo":"lastTempData","x":1360,"y":560,"wires":[["b125c985.38935"]]},{"id":"3362102f.a01c48","type":"mysql-query","z":"f81c2146.a8a8","mydb":"686c798c.8bfb1","name":"get devices info","queryString":"select * from device","outputTo":"devicesInfo","x":500,"y":740,"wires":[["d413d2b5.1347f8"]]},{"id":"b9b7234e.9c93e8","type":"inject","z":"f81c2146.a8a8","name":"interval check average temperature","topic":"","payload":"","payloadType":"date","repeat":"20","crontab":"","once":false,"x":190,"y":760,"wires":[["3362102f.a01c48"]]},{"id":"ee4c8255.dfd6d8","type":"influxdb-query","z":"f81c2146.a8a8","name":"query temperature history","influxdbServer":"9d158d3f.2c3128","queryString":"","outputTo":"tempData","x":920,"y":720,"wires":[["36cb2b0c.65c674"]]},{"id":"d413d2b5.1347f8","type":"function","z":"f81c2146.a8a8","name":"","func":"msg.receivedTime = msg.payload;\nlet limitTime = (msg.receivedTime -60000)*Math.pow(10,6);\nmsg.payload = {\n    // query:'SELECT * from data '+\n    //     'WHERE unit=\"Lux\" and time >='+limitTime\n            query:\"SELECT * from data WHERE unit='C'\" +\n            \"and time >=\"+limitTime\n}\nreturn msg;","outputs":1,"noerr":0,"x":710,"y":780,"wires":[["ee4c8255.dfd6d8"]]},{"id":"36cb2b0c.65c674","type":"function","z":"f81c2146.a8a8","name":"set light action","func":"for (let i = 0; i < msg.devicesInfo.length; i++) {\n    let checkDevice = msg.devicesInfo[i];\n    let totalTemp = 0;\n    let totalCount = 0;\n    for (var j = 0; j < msg.tempData.length; j++) {\n        var checkTempPoint = msg.tempData[j];\n        if (checkTempPoint.macAddr == checkDevice.macAddr) {\n            totalCount += 1;\n            totalTemp += checkTempPoint.value;\n        }\n    }\n    // check if avg temp is bigger than 25\n    if (totalCount > 0 && totalTemp / totalCount > 25) {\n        let sendLedOnActionMsg = {\n            topic: 'bkcloud/' + checkDevice.macAddr + '/action',\n            payload: {\n                'type': 'ledAction',\n                'action': 'ON'\n            }\n        };\n        let sendLedOffActionMsg = {\n            topic: 'bkcloud/' + checkDevice.macAddr + '/action',\n            payload: {\n                'type': 'ledAction',\n                'action': 'OFF'\n            }\n        };\n        node.send([sendLedOnActionMsg, null]);\n        setTimeout(function () {\n            node.send(sendLedOffActionMsg);\n        }, 5000);\n    }\n}","outputs":"2","noerr":0,"x":1180,"y":720,"wires":[["6decec72.938ed4"],["f2d8828b.b97cb8"]]},{"id":"6decec72.938ed4","type":"mqtt out","z":"f81c2146.a8a8","name":"send turn on light action","topic":"","qos":"","retain":"","broker":"c045e5a7.572c08","x":1410,"y":640,"wires":[]},{"id":"f2d8828b.b97cb8","type":"mqtt out","z":"f81c2146.a8a8","name":"send turn off light action","topic":"","qos":"","retain":"","broker":"c045e5a7.572c08","x":1410,"y":740,"wires":[]},{"id":"ee79c9ff.920d98","type":"inject","z":"f81c2146.a8a8","name":"set device status","topic":"","payload":"","payloadType":"date","repeat":"20","crontab":"","once":false,"x":130,"y":940,"wires":[[]]},{"id":"f622ad65.b8246","type":"debug","z":"f81c2146.a8a8","name":"","active":true,"console":"false","complete":"true","x":670,"y":880,"wires":[]},{"id":"26e3860f.5498b2","type":"data-validators","z":"f81c2146.a8a8","name":"","lightValidatorMin":15,"x":220,"y":360,"wires":[[]]}]